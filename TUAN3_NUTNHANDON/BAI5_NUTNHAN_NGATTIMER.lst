CCS PCH C Compiler, Version 5.101, 43599               22-Sep-23 22:30

               Filename:   D:\TTVXL\TUAN3_NUTNHANDON\BAI5_NUTNHAN_NGATTIMER.lst

               ROM used:   2988 bytes (9%)
                           Largest free fragment is 29776
               RAM used:   63 (3%) at main() level
                           86 (4%) worst case
               Stack used: 4 locations (2 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   0AB2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FA0.1
0056:  GOTO   0060
005A:  BTFSC  FA1.1
005C:  GOTO   00D4
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include <D:\TTVXL_TH\tv_pickit2_shift_1.c>
.................... #ifndef    __tv_pickit2_shift_1_c__
.................... #define    __tv_pickit2_shift_1_c__
.................... #include<tv_pickit2_shift_1.h>
.................... #ifndef    __TV_PICKIT2_SHIFT_1_H__
.................... #define    __TV_PICKIT2_SHIFT_1_H__
.................... 
.................... #include    <18f4550.h>
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #device     adc=10
.................... #fuses      nowdt,put,hs,noprotect,nolvp,cpudiv1
.................... #use        delay(clock=20000000)
00AE:  CLRF   FEA
00B0:  MOVLW  55
00B2:  MOVWF  FE9
00B4:  MOVF   FEF,W
00B6:  BZ    00D2
00B8:  MOVLW  06
00BA:  MOVWF  01
00BC:  CLRF   00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ 01,F
00C4:  BRA    00BC
00C6:  MOVLW  7B
00C8:  MOVWF  00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ FEF,F
00D0:  BRA    00B8
00D2:  RETURN 0
.................... //#use        i2c(master,slow,sda=pin_b0,scl=pin_b1)
.................... #use        rs232(baud=9600, xmit=pin_c6,rcv=pin_c7)
.................... //nut nhan:
.................... #define  bt0     pin_b5
.................... #define  bt1     pin_b4
.................... #define  bt2     pin_b3
.................... #define  bt3     pin_b2
.................... 
.................... #define  on      bt0       //dk led don, motor
.................... #define  off     bt1
.................... #define  inv     bt2
.................... 
.................... #define  up      bt0    //dk led don
.................... #define  dw      bt1
.................... #define  clr     bt2
.................... #define  mod     bt3
.................... 
.................... #define  stop    bt3
.................... 
.................... #define  on1     bt0     
.................... #define  off1    bt1
.................... #define  on2     bt2       
.................... #define  off2    bt3
.................... 
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... #define      ssdo             pin_e2         //chung tat ca
.................... #define      ssck             pin_e0         //chung tat ca
.................... #define      g_all            pin_d0         //a - 4 byte
.................... #define      rck_lcd20x4      pin_d2         //a - 2 byte dao
.................... #define      rck_buzerelay    pin_d3     //b - 1 byte 
.................... #define      rck_32led        pin_d4         //a - 4 byte
.................... #define      rck_8ledquet     pin_d5         //b - 2 byte dao
.................... #define      rck_4led7doan    pin_d6         //a - 4 byte
.................... #define      rck_matranled    pin_d7         //b - 3 byte dao
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //khai bao du lieu 16 bit cho module relay, triac, buzzer, dong co
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... unsigned int16 rbdc;
.................... #bit step_motor_enable  = rbdc.0    //1=ena,0=dis
.................... #bit step_motor_in1     = rbdc.1    
.................... #bit step_motor_in2     = rbdc.2
.................... #bit step_motor_in3     = rbdc.3
.................... #bit step_motor_in4     = rbdc.4
.................... #bit dc_enable          = rbdc.5    //1=ena,0=dis
.................... #bit pwrkey             = rbdc.6    //khoi tao sim900
.................... #bit buzzer             = rbdc.8    //1=on,0=off
.................... #bit triac_1            = rbdc.9    //1=on,0=off
.................... #bit triac_2            = rbdc.10   //1=on,0=off
.................... #bit relay_1            = rbdc.11   //0=on,1=off
.................... #bit relay_2            = rbdc.12   //0=on,1=off
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   
.................... const unsigned char ma7doan[16]= {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
.................... 0x80,0x90,0x88, 0x83, 0xc6, 0xa1, 0x86, 0x8e};
.................... #define     maso0    0xc0
.................... #define     maso1    0xf9
.................... #define     maso2    0xa4
.................... #define     maso3    0xb0
.................... #define     maso4    0x99
.................... #define     maso5    0x92
.................... #define     maso6    0x82
.................... #define     maso7    0xf8
.................... #endif
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
.................... //ham 102 xuat 1 byte ra thanh ghi dich
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... void xuat_1byte(unsigned int8 x)
.................... {
....................    unsigned int8 sb;   
....................    #bit bseri  = x.7
....................    for(sb=0;sb<8;sb++)
*
014C:  CLRF   54
014E:  MOVF   54,W
0150:  SUBLW  07
0152:  BNC   0170
....................       {                                                 
....................          output_bit(ssdo,bseri);    
0154:  BTFSC  53.7
0156:  BRA    015C
0158:  BCF    F8D.2
015A:  BRA    015E
015C:  BSF    F8D.2
015E:  BCF    F96.2
....................          output_low(ssck); output_high(ssck);
0160:  BCF    F96.0
0162:  BCF    F8D.0
0164:  BCF    F96.0
0166:  BSF    F8D.0
....................          x= x<<1;         
0168:  BCF    FD8.0
016A:  RLCF   53,F
016C:  INCF   54,F
016E:  BRA    014E
....................      }
0170:  RETURN 0
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
.................... //ham 301
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 4 byte ra 32 led don
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_32led_don_4byte(unsigned int8 bld3,bld2,bld1,bld0)
.................... {     
....................       xuat_1byte(bld3);          
*
021A:  MOVFF  4F,53
021E:  RCALL  014C
....................       xuat_1byte(bld2);
0220:  MOVFF  50,53
0224:  RCALL  014C
....................       xuat_1byte(bld1);          
0226:  MOVFF  51,53
022A:  RCALL  014C
....................       xuat_1byte(bld0);                              
022C:  MOVFF  52,53
0230:  RCALL  014C
....................       output_high(rck_32led);    
0232:  BCF    F95.4
0234:  BSF    F8C.4
....................       output_low(rck_32led);
0236:  BCF    F95.4
0238:  BCF    F8C.4
023A:  RETURN 0
....................     
.................... }
.................... //ham 302
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 2 word 16 bitra 32 led don
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_32led_don_2word(unsigned int16 wld1, unsigned int16 wld0)
.................... {     
....................      unsigned int8  b3,b2,b1,b0;
....................      b3 = wld1>>8;  b2 = wld1; 
....................      b1 = wld0>>8;  b0 = wld0;
....................      xuat_32led_don_4byte(b3,b2,b1,b0);
.................... }
.................... //ham 303
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 1 double word ra 32 led don
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_32led_don_1dw(unsigned long long dwld)
.................... {     
....................      unsigned int16  wd1,wd0;
....................      wd1 = dwld>>16;  wd0 = dwld;
....................      xuat_32led_don_2word(wd1,wd0);
.................... }
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... //xuat 1 bit roi tra lai ket qua sau khi dich di 1 bit
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... unsigned  int8 xuat_1bit(unsigned int8 bytexuat)
.................... {
....................       unsigned int8   xbitx;   
....................       #bit bserix  = xbitx.0
....................       xbitx = bytexuat;
....................                                             
....................       output_bit(ssdo,bserix);    
....................       output_low(ssck); output_high(ssck);
....................       xbitx= xbitx>>1;   
....................       return(xbitx);  
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... //ham 103: xuat 1 word ra thanh ghi dich
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... void xuat_1word(unsigned int16 w)
.................... {  
....................    unsigned int8 b1,b0;
....................    b1 = w>>8; b0 = w;
*
0172:  MOVFF  40,41
0176:  MOVFF  3F,42
....................    xuat_1byte(b1);    
017A:  MOVFF  41,53
017E:  RCALL  014C
....................    xuat_1byte(b0);
0180:  MOVFF  42,53
0184:  RCALL  014C
0186:  RETURN 0
.................... }   
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     
.................... //ham 104: xoa cac module 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  
.................... void xoa_tat_6module()                          
.................... {                                                                                              
....................    xuat_1word(0);                             
0188:  CLRF   40
018A:  CLRF   3F
018C:  RCALL  0172
....................    xuat_1word(0); 
018E:  CLRF   40
0190:  CLRF   3F
0192:  RCALL  0172
....................    xuat_1word(0);                             
0194:  CLRF   40
0196:  CLRF   3F
0198:  RCALL  0172
....................    xuat_1word(0);                                    
019A:  CLRF   40
019C:  CLRF   3F
019E:  RCALL  0172
....................    
....................    output_high(rck_buzerelay);   
01A0:  BCF    F95.3
01A2:  BSF    F8C.3
....................    output_low(rck_buzerelay);
01A4:  BCF    F95.3
01A6:  BCF    F8C.3
....................    
....................    output_high(rck_32led);
01A8:  BCF    F95.4
01AA:  BSF    F8C.4
....................    output_low(rck_32led); 
01AC:  BCF    F95.4
01AE:  BCF    F8C.4
....................    
....................    output_high(rck_8ledquet);   
01B0:  BCF    F95.5
01B2:  BSF    F8C.5
....................    output_low(rck_8ledquet);   
01B4:  BCF    F95.5
01B6:  BCF    F8C.5
....................                                  
....................    output_high(rck_matranled);          
01B8:  BCF    F95.7
01BA:  BSF    F8C.7
....................    output_low(rck_matranled);   
01BC:  BCF    F95.7
01BE:  BCF    F8C.7
....................                            
....................    output_high(rck_lcd20x4);   
01C0:  BCF    F95.2
01C2:  BSF    F8C.2
....................    output_low(rck_lcd20x4);      
01C4:  BCF    F95.2
01C6:  BCF    F8C.2
....................                                                                           
....................    xuat_1word(0xffff); 
01C8:  SETF   40
01CA:  SETF   3F
01CC:  RCALL  0172
....................    xuat_1word(0xffff); 
01CE:  SETF   40
01D0:  SETF   3F
01D2:  RCALL  0172
....................    output_high(rck_4led7doan);       
01D4:  BCF    F95.6
01D6:  BSF    F8C.6
....................    output_low(rck_4led7doan);                                                                      
01D8:  BCF    F95.6
01DA:  BCF    F8C.6
01DC:  GOTO   01F8 (RETURN)
.................... }             
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
.................... //ham 101
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... //ham khoi tao cac port va ic chot
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... void set_up_port_ic_chot()
.................... {     
....................    set_tris_a(0xff);    set_tris_b(0x3c);                                                   
01E0:  MOVLW  FF
01E2:  MOVWF  F92
01E4:  MOVLW  3C
01E6:  MOVWF  F93
....................    set_tris_c(0xf1);    set_tris_e(0x00);                                               
01E8:  MOVLW  F1
01EA:  MOVWF  F94
01EC:  MOVLW  00
01EE:  MOVWF  F96
....................    set_tris_d(0x00);    
01F0:  MOVWF  F95
....................    output_d(0x00); 
01F2:  CLRF   F95
01F4:  CLRF   F8C
....................    xoa_tat_6module();
01F6:  BRA    0188
....................    port_b_pullups(0xff);          
01F8:  BCF    FF1.7
....................    rbdc=0;               
01FA:  CLRF   1B
01FC:  CLRF   1A
....................             
....................    setup_adc(adc_clock_div_32);        
01FE:  MOVF   FC0,W
0200:  ANDLW  C0
0202:  IORLW  02
0204:  MOVWF  FC0
0206:  BSF    FC0.7
0208:  BSF    FC2.0
....................    setup_adc_ports(an0_to_an2|vss_vdd); 
020A:  MOVF   FC1,W
020C:  ANDLW  C0
020E:  IORLW  0C
0210:  MOVWF  FC1
....................    output_low(g_all);        
0212:  BCF    F95.0
0214:  BCF    F8C.0
0216:  GOTO   0AFA (RETURN)
.................... }
.................... //ham 104
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 4 byte ra 4 led 7 doan
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_4led_7doan_4so(unsigned int bl743,bl742,bl741,bl740)
.................... {     
....................       xuat_1byte(bl740);   xuat_1byte(bl741);
....................       xuat_1byte(bl742);   xuat_1byte(bl743);       
....................       output_low(rck_4led7doan);   
....................       output_high(rck_4led7doan);
.................... 
.................... }
.................... //ham 404
.................... void xuat_4led_7doan_3so(unsigned int bl742,bl741,bl740)
.................... {     
....................      xuat_4led_7doan_4so(0xff,bl742,bl741,bl740);
.................... }
.................... //ham 403
.................... void xuat_4led_7doan_2so(unsigned int bl741,bl740)
.................... {     
....................      xuat_4led_7doan_4so(0xff,0xff,bl741,bl740);
.................... }
.................... //ham 402
.................... void xuat_4led_7doan_1so(unsigned int bl740)
.................... {     
....................      xuat_4led_7doan_4so(0xff,0xff,0xff,bl740);
.................... }
.................... 
.................... //ham 405
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi du lieu 16 bit tren 4 led 7 doan
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void  xuat_4led_7doan_giaima_xoa_so0 (unsigned int16 tam)
.................... {         
....................       unsigned int8 ht[4]={0xff,0xff,0xff,0xff},i=0;
....................       do
....................       {
....................           ht[i]= ma7doan[tam%10];
....................           tam/=10;i++;
....................       }
....................       while(tam);
....................       xuat_4led_7doan_4so(ht[3],ht[2],ht[1],ht[0]);
.................... }
.................... 
.................... void  xuat_4led_7doan_2_so (unsigned int8 bh,bl)
.................... {         
....................  xuat_4led_7doan_4so(ma7doan[bh/10],ma7doan[bh%10],ma7doan[bl/10],ma7doan[bl%10]);   
.................... }
.................... 
.................... unsigned int8 lcddata=0; 
.................... unsigned int8 lcdcontrol=0;
.................... unsigned int8 glcddata=0;
.................... unsigned int8 glcdcontrol=0; 
.................... //ham 701
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat du lieu 4 byte ra glcd va lcd
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_glcd_lcd()
.................... {      
....................     xuat_1byte(glcdcontrol);             
....................     xuat_1byte(glcddata);
....................     xuat_1byte(lcdcontrol);       
....................     xuat_1byte(lcddata);      
....................          
....................     output_high(rck_lcd20x4);     
....................     output_low(rck_lcd20x4);
.................... }
.................... //ham 702
.................... void xuat_lcd20x4(unsigned int8 lcd_signal,lcd_ins_hthi)
.................... {     
....................     lcdcontrol = ~lcd_signal;
....................     lcddata    = ~lcd_ins_hthi;      
....................     xuat_glcd_lcd();
.................... }
.................... //ham 703
.................... void xuat_glcd128x64(unsigned int8 glcd_signal,glcd_ins_hthi)
.................... {     
....................     glcdcontrol = ~glcd_signal;
....................     glcddata    = ~glcd_ins_hthi;     
....................     xuat_glcd_lcd();
.................... }
.................... //ham 501
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 2 byte ra dk 1 led quet sang
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_8led_7doan_quet_1(unsigned int ma,so_hthi)
.................... {     
....................       xuat_1byte(~ma);   
....................       xuat_1byte(~so_hthi);
....................       output_high(rck_8ledquet); 
....................       output_low(rck_8ledquet);
.................... }
.................... //ham 502
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 2 byte ra tat 8 led quet
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_8led_7doan_quet_tat_led()
.................... {
....................    xuat_8led_7doan_quet_1(0xff,0xff);
.................... }
.................... //ham 503
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi led theo thu tu
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... const unsigned char ttledquet[8]= {0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
.................... void xuat_8led_7doan_quet_2(unsigned int thutuled,so_hthi)
.................... {         
....................       xuat_1byte(~ (ttledquet[thutuled]));   
....................       xuat_1byte(~so_hthi);     
....................       output_high(rck_8ledquet); 
....................       output_low(rck_8ledquet);
.................... }
.................... //ham 504
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi 8 so tren 8 led quet - co kiem tra
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... unsigned char led_7dq[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
.................... unsigned int8 tt8led=0;
.................... void hien_thi_8led_7doan_quet()
.................... {     
....................       for(tt8led=0;tt8led<8;tt8led++)
....................          if (led_7dq[tt8led]!=0xff)
....................          {           
....................             xuat_8led_7doan_quet_2(tt8led, led_7dq[tt8led]);
....................             delay_us(100);
....................             xuat_8led_7doan_quet_tat_led();           
....................             }
.................... }
.................... //ham 505
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi 8 so tren 8 led quet - khong kiem tra
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void hien_thi_8led_7doan_quet_all()
.................... {     
....................       for(tt8led=0;tt8led<8;tt8led++)         
....................          {           
....................             xuat_8led_7doan_quet_2(tt8led, led_7dq[tt8led]);
....................             delay_us(100);
....................             xuat_8led_7doan_quet_tat_led();           
....................             }
.................... }
.................... 
.................... void delay_quet_8led(unsigned int16 dl)
.................... { 
....................       unsigned int8 i;
....................       for (i=0; i<dl;i++)
....................       hien_thi_8led_7doan_quet_all();
.................... } 
.................... 
.................... void giai_ma_gan_cho_8led_quet_16_xoa(unsigned int16 x)
.................... {     
....................       led_7dq[0]= ma7doan [x %10];    
....................       led_7dq[1]= ma7doan [x/10%10];
....................       led_7dq[2]= ma7doan [x/100%10];    
....................       led_7dq[3]= ma7doan [x/1000%10];
....................       led_7dq[4]= ma7doan [x/10000%10];
....................       if (led_7dq[4]==maso0) 
....................       {
....................             led_7dq[4]=0xff;
....................             if (led_7dq[3]==maso0) 
....................             {
....................                led_7dq[3]=0xff;
....................                if (led_7dq[2]==maso0) 
....................                {
....................                   led_7dq[2]=0xff;
....................                   if (led_7dq[1]==maso0) 
....................                   {
....................                      led_7dq[1]=0xff;
....................                   }
....................                }
....................             }
....................       }
....................             
.................... }
.................... 
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx         
.................... void xuat_2byte(unsigned int16 x)
.................... {
....................    int8 sbb;
....................    #bit bserix  = x.15
....................    for (sbb=0;sbb<16;sbb++)
....................       {                                                 
....................          output_bit(ssdo,bserix);    
....................          output_low(ssck);         
....................          output_high(ssck);
....................          x= x<<1;         
....................      }
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat ra led ma tran
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_matranled(unsigned int16 mahang,unsigned int16 macot1,
.................... unsigned int16 macot2,unsigned int16 macot3)
.................... {      
....................       xuat_2byte(macot3);
....................       xuat_2byte(macot2);
....................       xuat_2byte(macot1);
....................       xuat_2byte(mahang);     
.................... 
....................       output_high(rck_matranled); 
....................       output_low(rck_matranled);
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat ra led ma tran
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void tat_matranled()
.................... {      
....................       xuat_2byte(0);
....................       xuat_2byte(0);
....................       xuat_2byte(0);
....................       xuat_2byte(0);           
....................       output_high(rck_matranled); output_low(rck_matranled); 
.................... }
.................... unsigned  int8 hieu_chinh_4bit_cao(unsigned int8 xzy)
.................... {
....................       int1  btg;
....................       unsigned int8   bx;   
....................       #bit bit4  = bx.4
....................       #bit bit5  = bx.5
....................       #bit bit6  = bx.6
....................       #bit bit7  = bx.7
....................       bx=xzy;
....................       btg=bit4;   bit4=bit7;  bit7=btg;
....................       btg=bit5;   bit5=bit6;  bit6=btg;      
....................       return(bx);  
.................... }
.................... //ham 601
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //module dieu khien relay,triac, buzzer, dong co, sim
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_buzzer_relay()
.................... {     
....................    unsigned int8 rbdc1,rbdc2;
....................       rbdc1=rbdc; rbdc2=rbdc>>8;      
....................       xuat_1byte(rbdc2);      
....................       xuat_1byte(rbdc1);
....................       
....................       output_high(rck_buzerelay);   
....................       output_low(rck_buzerelay);
.................... }
.................... //ham 602
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void buzzer_on()
.................... {    
....................       buzzer=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 603
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void buzzer_off()
.................... {     
....................       buzzer=0;
....................       xuat_buzzer_relay();
.................... }
.................... //ham 604
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_on()
.................... {    
....................       relay_1=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 603
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_off()
.................... {    
....................       relay_1=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 604
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_2_on()
.................... {    
....................       relay_2=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 607
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_2_off()
.................... {    
....................       relay_2=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 608
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_relay_2_on()
.................... {    
....................       relay_1=1;  relay_2=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 609
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_relay_2_off()
.................... {    
....................       relay_1=0;  relay_2=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 610
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_1_on()
.................... {    
....................       triac_1=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 611
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_1_off()
.................... {    
....................       triac_1=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 612
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_2_on()
.................... {    
....................       triac_2=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 613
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_2_off()
.................... {    
....................       triac_2=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... 
.................... void ggmmaa()
.................... {
....................    unsigned int8   x;   
....................    x=ma7doan[1];
.................... }
.................... #endif
....................  
.................... 
.................... unsigned int16 MODE=1;
.................... unsigned int32 y,i,k,run,save;
.................... 
.................... VOID KIEU1()
.................... //!CHOP_TAT_2PORT_XENKE
.................... {  I=0;
*
023C:  CLRF   32
023E:  CLRF   31
0240:  CLRF   30
0242:  CLRF   2F
....................    WHILE(I<10)
0244:  MOVF   32,F
0246:  BNZ   02AA
0248:  MOVF   31,F
024A:  BNZ   02AA
024C:  MOVF   30,F
024E:  BNZ   02AA
0250:  MOVF   2F,W
0252:  SUBLW  09
0254:  BNC   02AA
....................    { 
....................       xuat_32led_don_4byte(0XFF,0,0,0xFF);
0256:  SETF   4F
0258:  CLRF   50
025A:  CLRF   51
025C:  SETF   52
025E:  RCALL  021A
0260:  CLRF   19
0262:  BTFSC  FF2.7
0264:  BSF    19.7
0266:  BCF    FF2.7
....................       DELAY_MS(110);
0268:  MOVLW  6E
026A:  MOVWF  55
026C:  RCALL  00AE
026E:  BTFSC  19.7
0270:  BSF    FF2.7
....................       xuat_32led_don_4byte(0,0xFF,0xFF,0);
0272:  CLRF   4F
0274:  SETF   50
0276:  SETF   51
0278:  CLRF   52
027A:  RCALL  021A
027C:  CLRF   19
027E:  BTFSC  FF2.7
0280:  BSF    19.7
0282:  BCF    FF2.7
....................       DELAY_MS(110);
0284:  MOVLW  6E
0286:  MOVWF  55
0288:  RCALL  00AE
028A:  BTFSC  19.7
028C:  BSF    FF2.7
....................       I++;
028E:  MOVLW  01
0290:  ADDWF  2F,F
0292:  BTFSC  FD8.0
0294:  INCF   30,F
0296:  BTFSC  FD8.2
0298:  INCF   31,F
029A:  BTFSC  FD8.2
029C:  INCF   32,F
....................       if(mode!=1) break; 
029E:  DECFSZ 29,W
02A0:  BRA    02A6
02A2:  MOVF   2A,F
02A4:  BTFSS  FD8.2
02A6:  BRA    02AA
02A8:  BRA    0244
....................    }
02AA:  GOTO   0BAC (RETURN)
.................... }
.................... void KIEU2()
.................... {
.................... //!SANG_DICH_3LED_TSP
....................    for(i=0;i<=32;i++)
02AE:  CLRF   32
02B0:  CLRF   31
02B2:  CLRF   30
02B4:  CLRF   2F
02B6:  MOVF   32,F
02B8:  BNZ   0334
02BA:  MOVF   31,F
02BC:  BNZ   0334
02BE:  MOVF   30,F
02C0:  BNZ   0334
02C2:  MOVF   2F,W
02C4:  SUBLW  20
02C6:  BNC   0334
....................    { 
....................       y=0xE0000000>>i;
02C8:  MOVLW  E0
02CA:  MOVWF  2E
02CC:  CLRF   2D
02CE:  CLRF   2C
02D0:  CLRF   2B
02D2:  MOVF   2F,W
02D4:  MOVWF  3F
02D6:  BZ    02E6
02D8:  BCF    FD8.0
02DA:  RRCF   2E,F
02DC:  RRCF   2D,F
02DE:  RRCF   2C,F
02E0:  RRCF   2B,F
02E2:  DECFSZ 3F,F
02E4:  BRA    02D8
....................       xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
02E6:  CLRF   41
02E8:  CLRF   42
02EA:  CLRF   43
02EC:  CLRF   47
02EE:  CLRF   48
02F0:  CLRF   4D
02F2:  MOVFF  2E,4F
02F6:  MOVFF  2D,50
02FA:  MOVFF  2C,51
02FE:  MOVFF  2B,52
0302:  RCALL  021A
0304:  CLRF   19
0306:  BTFSC  FF2.7
0308:  BSF    19.7
030A:  BCF    FF2.7
....................       delay_ms(50);
030C:  MOVLW  32
030E:  MOVWF  55
0310:  RCALL  00AE
0312:  BTFSC  19.7
0314:  BSF    FF2.7
....................       if(mode!=2) break; 
0316:  MOVF   29,W
0318:  SUBLW  02
031A:  BNZ   0320
031C:  MOVF   2A,F
031E:  BTFSS  FD8.2
0320:  BRA    0334
0322:  MOVLW  01
0324:  ADDWF  2F,F
0326:  BTFSC  FD8.0
0328:  INCF   30,F
032A:  BTFSC  FD8.2
032C:  INCF   31,F
032E:  BTFSC  FD8.2
0330:  INCF   32,F
0332:  BRA    02B6
....................    }
0334:  GOTO   0BAC (RETURN)
.................... } 
.................... void KIEU3()
.................... {
.................... //!SANG_DICH_3LED_PST
....................    for(i=0;i<=32;i++)
0338:  CLRF   32
033A:  CLRF   31
033C:  CLRF   30
033E:  CLRF   2F
0340:  MOVF   32,F
0342:  BNZ   03BE
0344:  MOVF   31,F
0346:  BNZ   03BE
0348:  MOVF   30,F
034A:  BNZ   03BE
034C:  MOVF   2F,W
034E:  SUBLW  20
0350:  BNC   03BE
....................    {
....................   
....................    y=0x00000007<<i;
0352:  CLRF   2E
0354:  CLRF   2D
0356:  CLRF   2C
0358:  MOVLW  07
035A:  MOVWF  2B
035C:  MOVF   2F,W
035E:  MOVWF  3F
0360:  BZ    0370
0362:  BCF    FD8.0
0364:  RLCF   2B,F
0366:  RLCF   2C,F
0368:  RLCF   2D,F
036A:  RLCF   2E,F
036C:  DECFSZ 3F,F
036E:  BRA    0362
....................    xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0370:  CLRF   41
0372:  CLRF   42
0374:  CLRF   43
0376:  CLRF   47
0378:  CLRF   48
037A:  CLRF   4D
037C:  MOVFF  2E,4F
0380:  MOVFF  2D,50
0384:  MOVFF  2C,51
0388:  MOVFF  2B,52
038C:  RCALL  021A
038E:  CLRF   19
0390:  BTFSC  FF2.7
0392:  BSF    19.7
0394:  BCF    FF2.7
....................    delay_ms(50);
0396:  MOVLW  32
0398:  MOVWF  55
039A:  RCALL  00AE
039C:  BTFSC  19.7
039E:  BSF    FF2.7
....................    if(mode!=3) break; 
03A0:  MOVF   29,W
03A2:  SUBLW  03
03A4:  BNZ   03AA
03A6:  MOVF   2A,F
03A8:  BTFSS  FD8.2
03AA:  BRA    03BE
03AC:  MOVLW  01
03AE:  ADDWF  2F,F
03B0:  BTFSC  FD8.0
03B2:  INCF   30,F
03B4:  BTFSC  FD8.2
03B6:  INCF   31,F
03B8:  BTFSC  FD8.2
03BA:  INCF   32,F
03BC:  BRA    0340
....................    }
03BE:  GOTO   0BAC (RETURN)
.................... }
.................... VOID KIEU4()
.................... {       
.................... //!CHOP_TAT
....................    y=0; i=0;
03C2:  CLRF   2E
03C4:  CLRF   2D
03C6:  CLRF   2C
03C8:  CLRF   2B
03CA:  CLRF   32
03CC:  CLRF   31
03CE:  CLRF   30
03D0:  CLRF   2F
....................    while(i<10)
03D2:  MOVF   32,F
03D4:  BNZ   042E
03D6:  MOVF   31,F
03D8:  BNZ   042E
03DA:  MOVF   30,F
03DC:  BNZ   042E
03DE:  MOVF   2F,W
03E0:  SUBLW  09
03E2:  BNC   042E
....................    {      
....................       xuat_32led_don_4byte(y,y,y,y);
03E4:  MOVFF  2B,4F
03E8:  MOVFF  2B,50
03EC:  MOVFF  2B,51
03F0:  MOVFF  2B,52
03F4:  RCALL  021A
03F6:  CLRF   19
03F8:  BTFSC  FF2.7
03FA:  BSF    19.7
03FC:  BCF    FF2.7
....................       delay_ms(200);
03FE:  MOVLW  C8
0400:  MOVWF  55
0402:  RCALL  00AE
0404:  BTFSC  19.7
0406:  BSF    FF2.7
....................       y= ~y;
0408:  COMF   2B,F
040A:  COMF   2C,F
040C:  COMF   2D,F
040E:  COMF   2E,F
....................       i++;
0410:  MOVLW  01
0412:  ADDWF  2F,F
0414:  BTFSC  FD8.0
0416:  INCF   30,F
0418:  BTFSC  FD8.2
041A:  INCF   31,F
041C:  BTFSC  FD8.2
041E:  INCF   32,F
....................       if(mode!=4) break; 
0420:  MOVF   29,W
0422:  SUBLW  04
0424:  BNZ   042A
0426:  MOVF   2A,F
0428:  BTFSS  FD8.2
042A:  BRA    042E
042C:  BRA    03D2
....................    }
042E:  GOTO   0BAC (RETURN)
.................... 
.................... }
.................... VOID KIEU5()
.................... {
.................... //! SANG DON 32LED
....................    save=0;
0432:  CLRF   3E
0434:  CLRF   3D
0436:  CLRF   3C
0438:  CLRF   3B
....................    for(k=0;k<32;k++)
043A:  CLRF   36
043C:  CLRF   35
043E:  CLRF   34
0440:  CLRF   33
0442:  MOVF   36,F
0444:  BNZ   0512
0446:  MOVF   35,F
0448:  BNZ   0512
044A:  MOVF   34,F
044C:  BNZ   0512
044E:  MOVF   33,W
0450:  SUBLW  1F
0452:  BNC   0512
....................    {  
....................       
....................       run=0x00000001;
0454:  CLRF   3A
0456:  CLRF   39
0458:  CLRF   38
045A:  MOVLW  01
045C:  MOVWF  37
....................       for(i=k; i<32;i++)
045E:  MOVFF  36,32
0462:  MOVFF  35,31
0466:  MOVFF  34,30
046A:  MOVFF  33,2F
046E:  MOVF   32,F
0470:  BNZ   04F0
0472:  MOVF   31,F
0474:  BNZ   04F0
0476:  MOVF   30,F
0478:  BNZ   04F0
047A:  MOVF   2F,W
047C:  SUBLW  1F
047E:  BNC   04F0
....................       {
....................    
....................       y=run|save;
0480:  MOVF   37,W
0482:  IORWF  3B,W
0484:  MOVWF  2B
0486:  MOVF   38,W
0488:  IORWF  3C,W
048A:  MOVWF  2C
048C:  MOVF   39,W
048E:  IORWF  3D,W
0490:  MOVWF  2D
0492:  MOVF   3A,W
0494:  IORWF  3E,W
0496:  MOVWF  2E
....................       xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0498:  CLRF   41
049A:  CLRF   42
049C:  CLRF   43
049E:  CLRF   47
04A0:  CLRF   48
04A2:  CLRF   4D
04A4:  MOVFF  2E,4F
04A8:  MOVFF  2D,50
04AC:  MOVFF  2C,51
04B0:  MOVFF  2B,52
04B4:  RCALL  021A
04B6:  CLRF   19
04B8:  BTFSC  FF2.7
04BA:  BSF    19.7
04BC:  BCF    FF2.7
....................       delay_ms(10);
04BE:  MOVLW  0A
04C0:  MOVWF  55
04C2:  RCALL  00AE
04C4:  BTFSC  19.7
04C6:  BSF    FF2.7
....................       run=run<<1;
04C8:  BCF    FD8.0
04CA:  RLCF   37,F
04CC:  RLCF   38,F
04CE:  RLCF   39,F
04D0:  RLCF   3A,F
....................       if(mode!=5) break;
04D2:  MOVF   29,W
04D4:  SUBLW  05
04D6:  BNZ   04DC
04D8:  MOVF   2A,F
04DA:  BTFSS  FD8.2
04DC:  BRA    04F0
04DE:  MOVLW  01
04E0:  ADDWF  2F,F
04E2:  BTFSC  FD8.0
04E4:  INCF   30,F
04E6:  BTFSC  FD8.2
04E8:  INCF   31,F
04EA:  BTFSC  FD8.2
04EC:  INCF   32,F
04EE:  BRA    046E
....................       }
....................       save=y;
04F0:  MOVFF  2E,3E
04F4:  MOVFF  2D,3D
04F8:  MOVFF  2C,3C
04FC:  MOVFF  2B,3B
0500:  MOVLW  01
0502:  ADDWF  33,F
0504:  BTFSC  FD8.0
0506:  INCF   34,F
0508:  BTFSC  FD8.2
050A:  INCF   35,F
050C:  BTFSC  FD8.2
050E:  INCF   36,F
0510:  BRA    0442
....................    }
0512:  GOTO   0BAC (RETURN)
.................... }
.................... VOID KIEU6()
.................... {
.................... //! TAT DAN DON 32LED
....................    Y=0XFFFFFF; 
0516:  CLRF   2E
0518:  SETF   2D
051A:  SETF   2C
051C:  SETF   2B
....................    xuat_32led_don_4byte(y>>24,y>>16,y>>8,y); DELAY_MS(100);
051E:  CLRF   41
0520:  CLRF   42
0522:  CLRF   43
0524:  CLRF   47
0526:  CLRF   48
0528:  CLRF   4D
052A:  MOVFF  2E,4F
052E:  MOVFF  2D,50
0532:  MOVFF  2C,51
0536:  MOVFF  2B,52
053A:  RCALL  021A
053C:  CLRF   19
053E:  BTFSC  FF2.7
0540:  BSF    19.7
0542:  BCF    FF2.7
0544:  MOVLW  64
0546:  MOVWF  55
0548:  RCALL  00AE
054A:  BTFSC  19.7
054C:  BSF    FF2.7
....................    Y=SAVE=0XFFFFFFFE; 
054E:  SETF   3E
0550:  SETF   3D
0552:  SETF   3C
0554:  MOVLW  FE
0556:  MOVWF  3B
0558:  MOVFF  3E,2E
055C:  MOVFF  3D,2D
0560:  MOVFF  3C,2C
0564:  MOVFF  3B,2B
....................    FOR(I=0;I<32;I++)
0568:  CLRF   32
056A:  CLRF   31
056C:  CLRF   30
056E:  CLRF   2F
0570:  MOVF   32,F
0572:  BTFSS  FD8.2
0574:  BRA    0672
0576:  MOVF   31,F
0578:  BTFSS  FD8.2
057A:  BRA    0672
057C:  MOVF   30,F
057E:  BTFSS  FD8.2
0580:  BRA    0672
0582:  MOVF   2F,W
0584:  SUBLW  1F
0586:  BTFSS  FD8.0
0588:  BRA    0672
....................    {
....................       RUN=0X00000001<<I; 
058A:  CLRF   3A
058C:  CLRF   39
058E:  CLRF   38
0590:  MOVLW  01
0592:  MOVWF  37
0594:  MOVF   2F,W
0596:  MOVWF  3F
0598:  BZ    05A8
059A:  BCF    FD8.0
059C:  RLCF   37,F
059E:  RLCF   38,F
05A0:  RLCF   39,F
05A2:  RLCF   3A,F
05A4:  DECFSZ 3F,F
05A6:  BRA    059A
....................       FOR(K=0;K<I+1;K++)
05A8:  CLRF   36
05AA:  CLRF   35
05AC:  CLRF   34
05AE:  CLRF   33
05B0:  MOVLW  01
05B2:  ADDWF  2F,W
05B4:  MOVWF  00
05B6:  MOVLW  00
05B8:  ADDWFC 30,W
05BA:  MOVWF  01
05BC:  MOVLW  00
05BE:  ADDWFC 31,W
05C0:  MOVWF  02
05C2:  MOVLW  00
05C4:  ADDWFC 32,W
05C6:  MOVWF  03
05C8:  MOVF   36,W
05CA:  SUBWF  03,W
05CC:  BNC   0656
05CE:  BNZ   05E6
05D0:  MOVF   35,W
05D2:  SUBWF  02,W
05D4:  BNC   0656
05D6:  BNZ   05E6
05D8:  MOVF   34,W
05DA:  SUBWF  01,W
05DC:  BNC   0656
05DE:  BNZ   05E6
05E0:  MOVF   00,W
05E2:  SUBWF  33,W
05E4:  BC    0656
....................          { 
....................             RUN=RUN>>1; 
05E6:  BCF    FD8.0
05E8:  RRCF   3A,F
05EA:  RRCF   39,F
05EC:  RRCF   38,F
05EE:  RRCF   37,F
....................             Y=RUN|SAVE;
05F0:  MOVF   37,W
05F2:  IORWF  3B,W
05F4:  MOVWF  2B
05F6:  MOVF   38,W
05F8:  IORWF  3C,W
05FA:  MOVWF  2C
05FC:  MOVF   39,W
05FE:  IORWF  3D,W
0600:  MOVWF  2D
0602:  MOVF   3A,W
0604:  IORWF  3E,W
0606:  MOVWF  2E
....................             xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0608:  CLRF   41
060A:  CLRF   42
060C:  CLRF   43
060E:  CLRF   47
0610:  CLRF   48
0612:  CLRF   4D
0614:  MOVFF  2E,4F
0618:  MOVFF  2D,50
061C:  MOVFF  2C,51
0620:  MOVFF  2B,52
0624:  RCALL  021A
0626:  CLRF   19
0628:  BTFSC  FF2.7
062A:  BSF    19.7
062C:  BCF    FF2.7
....................             DELAY_MS(10);
062E:  MOVLW  0A
0630:  MOVWF  55
0632:  RCALL  00AE
0634:  BTFSC  19.7
0636:  BSF    FF2.7
....................             if(mode!=6) break; 
0638:  MOVF   29,W
063A:  SUBLW  06
063C:  BNZ   0642
063E:  MOVF   2A,F
0640:  BTFSS  FD8.2
0642:  BRA    0656
0644:  MOVLW  01
0646:  ADDWF  33,F
0648:  BTFSC  FD8.0
064A:  INCF   34,F
064C:  BTFSC  FD8.2
064E:  INCF   35,F
0650:  BTFSC  FD8.2
0652:  INCF   36,F
0654:  BRA    05B0
....................          }
....................          SAVE=SAVE<<1;
0656:  BCF    FD8.0
0658:  RLCF   3B,F
065A:  RLCF   3C,F
065C:  RLCF   3D,F
065E:  RLCF   3E,F
0660:  MOVLW  01
0662:  ADDWF  2F,F
0664:  BTFSC  FD8.0
0666:  INCF   30,F
0668:  BTFSC  FD8.2
066A:  INCF   31,F
066C:  BTFSC  FD8.2
066E:  INCF   32,F
0670:  BRA    0570
....................     }
0672:  GOTO   0BAC (RETURN)
.................... }
.................... VOID KIEU7()
.................... {
.................... //!         Sang dan PST
....................           for(i=0;i<32;i++)
0676:  CLRF   32
0678:  CLRF   31
067A:  CLRF   30
067C:  CLRF   2F
067E:  MOVF   32,F
0680:  BNZ   0708
0682:  MOVF   31,F
0684:  BNZ   0708
0686:  MOVF   30,F
0688:  BNZ   0708
068A:  MOVF   2F,W
068C:  SUBLW  1F
068E:  BNC   0708
....................           {
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0690:  CLRF   41
0692:  CLRF   42
0694:  CLRF   43
0696:  CLRF   47
0698:  CLRF   48
069A:  CLRF   4D
069C:  MOVFF  2E,4F
06A0:  MOVFF  2D,50
06A4:  MOVFF  2C,51
06A8:  MOVFF  2B,52
06AC:  RCALL  021A
06AE:  CLRF   19
06B0:  BTFSC  FF2.7
06B2:  BSF    19.7
06B4:  BCF    FF2.7
....................              delay_ms(30);
06B6:  MOVLW  1E
06B8:  MOVWF  55
06BA:  RCALL  00AE
06BC:  BTFSC  19.7
06BE:  BSF    FF2.7
....................              y= (y<<1)+1;
06C0:  BCF    FD8.0
06C2:  RLCF   2B,W
06C4:  MOVWF  40
06C6:  RLCF   2C,W
06C8:  MOVWF  41
06CA:  RLCF   2D,W
06CC:  MOVWF  42
06CE:  RLCF   2E,W
06D0:  MOVWF  43
06D2:  MOVLW  01
06D4:  ADDWF  40,W
06D6:  MOVWF  2B
06D8:  MOVLW  00
06DA:  ADDWFC 41,W
06DC:  MOVWF  2C
06DE:  MOVLW  00
06E0:  ADDWFC 42,W
06E2:  MOVWF  2D
06E4:  MOVLW  00
06E6:  ADDWFC 43,W
06E8:  MOVWF  2E
....................              if(mode!=7) break;
06EA:  MOVF   29,W
06EC:  SUBLW  07
06EE:  BNZ   06F4
06F0:  MOVF   2A,F
06F2:  BTFSS  FD8.2
06F4:  BRA    0708
06F6:  MOVLW  01
06F8:  ADDWF  2F,F
06FA:  BTFSC  FD8.0
06FC:  INCF   30,F
06FE:  BTFSC  FD8.2
0700:  INCF   31,F
0702:  BTFSC  FD8.2
0704:  INCF   32,F
0706:  BRA    067E
....................           }
....................           //!          Tat dan PST
....................           for(i=0;i<32;i++)
0708:  CLRF   32
070A:  CLRF   31
070C:  CLRF   30
070E:  CLRF   2F
0710:  MOVF   32,F
0712:  BNZ   077A
0714:  MOVF   31,F
0716:  BNZ   077A
0718:  MOVF   30,F
071A:  BNZ   077A
071C:  MOVF   2F,W
071E:  SUBLW  1F
0720:  BNC   077A
....................           { 
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0722:  CLRF   41
0724:  CLRF   42
0726:  CLRF   43
0728:  CLRF   47
072A:  CLRF   48
072C:  CLRF   4D
072E:  MOVFF  2E,4F
0732:  MOVFF  2D,50
0736:  MOVFF  2C,51
073A:  MOVFF  2B,52
073E:  RCALL  021A
0740:  CLRF   19
0742:  BTFSC  FF2.7
0744:  BSF    19.7
0746:  BCF    FF2.7
....................              delay_ms(30); 
0748:  MOVLW  1E
074A:  MOVWF  55
074C:  RCALL  00AE
074E:  BTFSC  19.7
0750:  BSF    FF2.7
....................              y= (y<<1);
0752:  BCF    FD8.0
0754:  RLCF   2B,F
0756:  RLCF   2C,F
0758:  RLCF   2D,F
075A:  RLCF   2E,F
....................              if(mode!=7) break;
075C:  MOVF   29,W
075E:  SUBLW  07
0760:  BNZ   0766
0762:  MOVF   2A,F
0764:  BTFSS  FD8.2
0766:  BRA    077A
0768:  MOVLW  01
076A:  ADDWF  2F,F
076C:  BTFSC  FD8.0
076E:  INCF   30,F
0770:  BTFSC  FD8.2
0772:  INCF   31,F
0774:  BTFSC  FD8.2
0776:  INCF   32,F
0778:  BRA    0710
....................           }
077A:  GOTO   0BAC (RETURN)
.................... }
.................... 
.................... VOID KIEU8()
.................... {
.................... //!          Sang dan TSP
....................           for(i=0;i<32;i++)
077E:  CLRF   32
0780:  CLRF   31
0782:  CLRF   30
0784:  CLRF   2F
0786:  MOVF   32,F
0788:  BNZ   0806
078A:  MOVF   31,F
078C:  BNZ   0806
078E:  MOVF   30,F
0790:  BNZ   0806
0792:  MOVF   2F,W
0794:  SUBLW  1F
0796:  BNC   0806
....................           { 
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0798:  CLRF   41
079A:  CLRF   42
079C:  CLRF   43
079E:  CLRF   47
07A0:  CLRF   48
07A2:  CLRF   4D
07A4:  MOVFF  2E,4F
07A8:  MOVFF  2D,50
07AC:  MOVFF  2C,51
07B0:  MOVFF  2B,52
07B4:  RCALL  021A
07B6:  CLRF   19
07B8:  BTFSC  FF2.7
07BA:  BSF    19.7
07BC:  BCF    FF2.7
....................              delay_ms(30); 
07BE:  MOVLW  1E
07C0:  MOVWF  55
07C2:  RCALL  00AE
07C4:  BTFSC  19.7
07C6:  BSF    FF2.7
....................              y= (y>>1)+0x80000000;
07C8:  BCF    FD8.0
07CA:  RRCF   2E,W
07CC:  MOVWF  43
07CE:  RRCF   2D,W
07D0:  MOVWF  42
07D2:  RRCF   2C,W
07D4:  MOVWF  41
07D6:  RRCF   2B,W
07D8:  MOVWF  2B
07DA:  MOVFF  41,2C
07DE:  MOVFF  42,2D
07E2:  MOVLW  80
07E4:  ADDWF  43,W
07E6:  MOVWF  2E
....................              if(mode!=8) break;
07E8:  MOVF   29,W
07EA:  SUBLW  08
07EC:  BNZ   07F2
07EE:  MOVF   2A,F
07F0:  BTFSS  FD8.2
07F2:  BRA    0806
07F4:  MOVLW  01
07F6:  ADDWF  2F,F
07F8:  BTFSC  FD8.0
07FA:  INCF   30,F
07FC:  BTFSC  FD8.2
07FE:  INCF   31,F
0800:  BTFSC  FD8.2
0802:  INCF   32,F
0804:  BRA    0786
....................           }
....................           //!          Tat dan TSP
....................           for(i=0;i<32;i++)
0806:  CLRF   32
0808:  CLRF   31
080A:  CLRF   30
080C:  CLRF   2F
080E:  MOVF   32,F
0810:  BNZ   0878
0812:  MOVF   31,F
0814:  BNZ   0878
0816:  MOVF   30,F
0818:  BNZ   0878
081A:  MOVF   2F,W
081C:  SUBLW  1F
081E:  BNC   0878
....................           { 
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0820:  CLRF   41
0822:  CLRF   42
0824:  CLRF   43
0826:  CLRF   47
0828:  CLRF   48
082A:  CLRF   4D
082C:  MOVFF  2E,4F
0830:  MOVFF  2D,50
0834:  MOVFF  2C,51
0838:  MOVFF  2B,52
083C:  RCALL  021A
083E:  CLRF   19
0840:  BTFSC  FF2.7
0842:  BSF    19.7
0844:  BCF    FF2.7
....................              delay_ms(30); 
0846:  MOVLW  1E
0848:  MOVWF  55
084A:  RCALL  00AE
084C:  BTFSC  19.7
084E:  BSF    FF2.7
....................              y= (y>>1);
0850:  BCF    FD8.0
0852:  RRCF   2E,F
0854:  RRCF   2D,F
0856:  RRCF   2C,F
0858:  RRCF   2B,F
....................              if(mode!=8) break;
085A:  MOVF   29,W
085C:  SUBLW  08
085E:  BNZ   0864
0860:  MOVF   2A,F
0862:  BTFSS  FD8.2
0864:  BRA    0878
0866:  MOVLW  01
0868:  ADDWF  2F,F
086A:  BTFSC  FD8.0
086C:  INCF   30,F
086E:  BTFSC  FD8.2
0870:  INCF   31,F
0872:  BTFSC  FD8.2
0874:  INCF   32,F
0876:  BRA    080E
....................           }
0878:  GOTO   0BAC (RETURN)
.................... }
.................... 
.................... VOID KIEU9()
.................... {
.................... //! DICH QUA LAI 1 LED
.................... Y = 0x00;  //! TAT TAT CA LED BAN DAU
087C:  CLRF   2E
087E:  CLRF   2D
0880:  CLRF   2C
0882:  CLRF   2B
.................... unsigned int8 dem=0;
0884:  CLRF   3F
....................     while (dem<2) {
0886:  MOVF   3F,W
0888:  SUBLW  01
088A:  BTFSS  FD8.0
088C:  BRA    09A2
....................         //! DICH SANG PHAI
....................         for (i = 0; i < 32; i++) 
088E:  CLRF   32
0890:  CLRF   31
0892:  CLRF   30
0894:  CLRF   2F
0896:  MOVF   32,F
0898:  BNZ   0916
089A:  MOVF   31,F
089C:  BNZ   0916
089E:  MOVF   30,F
08A0:  BNZ   0916
08A2:  MOVF   2F,W
08A4:  SUBLW  1F
08A6:  BNC   0916
....................         {
.................... 
....................            xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
08A8:  CLRF   42
08AA:  CLRF   43
08AC:  CLRF   44
08AE:  CLRF   48
08B0:  CLRF   49
08B2:  CLRF   4E
08B4:  MOVFF  2E,4F
08B8:  MOVFF  2D,50
08BC:  MOVFF  2C,51
08C0:  MOVFF  2B,52
08C4:  RCALL  021A
....................             Y = 1 << i;
08C6:  CLRF   2E
08C8:  CLRF   2D
08CA:  CLRF   2C
08CC:  MOVLW  01
08CE:  MOVWF  2B
08D0:  MOVF   2F,W
08D2:  MOVWF  40
08D4:  BZ    08E4
08D6:  BCF    FD8.0
08D8:  RLCF   2B,F
08DA:  RLCF   2C,F
08DC:  RLCF   2D,F
08DE:  RLCF   2E,F
08E0:  DECFSZ 40,F
08E2:  BRA    08D6
08E4:  CLRF   19
08E6:  BTFSC  FF2.7
08E8:  BSF    19.7
08EA:  BCF    FF2.7
....................             delay_ms(50);    
08EC:  MOVLW  32
08EE:  MOVWF  55
08F0:  CALL   00AE
08F4:  BTFSC  19.7
08F6:  BSF    FF2.7
....................             if(mode!=9) break;
08F8:  MOVF   29,W
08FA:  SUBLW  09
08FC:  BNZ   0902
08FE:  MOVF   2A,F
0900:  BTFSS  FD8.2
0902:  BRA    0916
0904:  MOVLW  01
0906:  ADDWF  2F,F
0908:  BTFSC  FD8.0
090A:  INCF   30,F
090C:  BTFSC  FD8.2
090E:  INCF   31,F
0910:  BTFSC  FD8.2
0912:  INCF   32,F
0914:  BRA    0896
....................         }
.................... 
.................... //!         DICH SANG TRAI
....................         for (i = 0; i < 32; i++)
0916:  CLRF   32
0918:  CLRF   31
091A:  CLRF   30
091C:  CLRF   2F
091E:  MOVF   32,F
0920:  BNZ   099E
0922:  MOVF   31,F
0924:  BNZ   099E
0926:  MOVF   30,F
0928:  BNZ   099E
092A:  MOVF   2F,W
092C:  SUBLW  1F
092E:  BNC   099E
....................         {
.................... 
....................         xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0930:  CLRF   42
0932:  CLRF   43
0934:  CLRF   44
0936:  CLRF   48
0938:  CLRF   49
093A:  CLRF   4E
093C:  MOVFF  2E,4F
0940:  MOVFF  2D,50
0944:  MOVFF  2C,51
0948:  MOVFF  2B,52
094C:  RCALL  021A
....................             Y = 0x80000000 >> i;
094E:  MOVLW  80
0950:  MOVWF  2E
0952:  CLRF   2D
0954:  CLRF   2C
0956:  CLRF   2B
0958:  MOVF   2F,W
095A:  MOVWF  40
095C:  BZ    096C
095E:  BCF    FD8.0
0960:  RRCF   2E,F
0962:  RRCF   2D,F
0964:  RRCF   2C,F
0966:  RRCF   2B,F
0968:  DECFSZ 40,F
096A:  BRA    095E
096C:  CLRF   19
096E:  BTFSC  FF2.7
0970:  BSF    19.7
0972:  BCF    FF2.7
....................             delay_ms(50); 
0974:  MOVLW  32
0976:  MOVWF  55
0978:  CALL   00AE
097C:  BTFSC  19.7
097E:  BSF    FF2.7
....................             if(mode!=9) break;
0980:  MOVF   29,W
0982:  SUBLW  09
0984:  BNZ   098A
0986:  MOVF   2A,F
0988:  BTFSS  FD8.2
098A:  BRA    099E
098C:  MOVLW  01
098E:  ADDWF  2F,F
0990:  BTFSC  FD8.0
0992:  INCF   30,F
0994:  BTFSC  FD8.2
0996:  INCF   31,F
0998:  BTFSC  FD8.2
099A:  INCF   32,F
099C:  BRA    091E
....................         }
....................         DEM++;
099E:  INCF   3F,F
09A0:  BRA    0886
....................     }
09A2:  GOTO   0BAC (RETURN)
.................... }
.................... VOID KIEU10()
.................... { 
.................... i=0; 
09A6:  CLRF   32
09A8:  CLRF   31
09AA:  CLRF   30
09AC:  CLRF   2F
.................... unsigned int x=200;
09AE:  MOVLW  C8
09B0:  MOVWF  3F
.................... while(i<3){
09B2:  MOVF   32,F
09B4:  BTFSS  FD8.2
09B6:  BRA    0AAE
09B8:  MOVF   31,F
09BA:  BTFSS  FD8.2
09BC:  BRA    0AAE
09BE:  MOVF   30,F
09C0:  BTFSS  FD8.2
09C2:  BRA    0AAE
09C4:  MOVF   2F,W
09C6:  SUBLW  02
09C8:  BNC   0AAE
....................  xuat_32led_don_4byte(0,0,0,0xff); delay_ms(x);
09CA:  CLRF   4F
09CC:  CLRF   50
09CE:  CLRF   51
09D0:  SETF   52
09D2:  RCALL  021A
09D4:  CLRF   19
09D6:  BTFSC  FF2.7
09D8:  BSF    19.7
09DA:  BCF    FF2.7
09DC:  MOVFF  3F,55
09E0:  CALL   00AE
09E4:  BTFSC  19.7
09E6:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0,0xff,0); delay_ms(x);
09E8:  CLRF   4F
09EA:  CLRF   50
09EC:  SETF   51
09EE:  CLRF   52
09F0:  RCALL  021A
09F2:  CLRF   19
09F4:  BTFSC  FF2.7
09F6:  BSF    19.7
09F8:  BCF    FF2.7
09FA:  MOVFF  3F,55
09FE:  CALL   00AE
0A02:  BTFSC  19.7
0A04:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0xff,0,0); delay_ms(x);
0A06:  CLRF   4F
0A08:  SETF   50
0A0A:  CLRF   51
0A0C:  CLRF   52
0A0E:  RCALL  021A
0A10:  CLRF   19
0A12:  BTFSC  FF2.7
0A14:  BSF    19.7
0A16:  BCF    FF2.7
0A18:  MOVFF  3F,55
0A1C:  CALL   00AE
0A20:  BTFSC  19.7
0A22:  BSF    FF2.7
....................   if(mode!=10) break; 
0A24:  MOVF   29,W
0A26:  SUBLW  0A
0A28:  BNZ   0A2E
0A2A:  MOVF   2A,F
0A2C:  BTFSS  FD8.2
0A2E:  BRA    0AAE
....................  xuat_32led_don_4byte(0xff,0,0,0); delay_ms(x);
0A30:  SETF   4F
0A32:  CLRF   50
0A34:  CLRF   51
0A36:  CLRF   52
0A38:  CALL   021A
0A3C:  CLRF   19
0A3E:  BTFSC  FF2.7
0A40:  BSF    19.7
0A42:  BCF    FF2.7
0A44:  MOVFF  3F,55
0A48:  CALL   00AE
0A4C:  BTFSC  19.7
0A4E:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0xff,0,0); delay_ms(x);
0A50:  CLRF   4F
0A52:  SETF   50
0A54:  CLRF   51
0A56:  CLRF   52
0A58:  CALL   021A
0A5C:  CLRF   19
0A5E:  BTFSC  FF2.7
0A60:  BSF    19.7
0A62:  BCF    FF2.7
0A64:  MOVFF  3F,55
0A68:  CALL   00AE
0A6C:  BTFSC  19.7
0A6E:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0,0xff,0); delay_ms(x);
0A70:  CLRF   4F
0A72:  CLRF   50
0A74:  SETF   51
0A76:  CLRF   52
0A78:  CALL   021A
0A7C:  CLRF   19
0A7E:  BTFSC  FF2.7
0A80:  BSF    19.7
0A82:  BCF    FF2.7
0A84:  MOVFF  3F,55
0A88:  CALL   00AE
0A8C:  BTFSC  19.7
0A8E:  BSF    FF2.7
....................  if(mode!=10) break; 
0A90:  MOVF   29,W
0A92:  SUBLW  0A
0A94:  BNZ   0A9A
0A96:  MOVF   2A,F
0A98:  BTFSS  FD8.2
0A9A:  BRA    0AAE
....................    i++;
0A9C:  MOVLW  01
0A9E:  ADDWF  2F,F
0AA0:  BTFSC  FD8.0
0AA2:  INCF   30,F
0AA4:  BTFSC  FD8.2
0AA6:  INCF   31,F
0AA8:  BTFSC  FD8.2
0AAA:  INCF   32,F
0AAC:  BRA    09B2
....................  }
0AAE:  GOTO   0BAC (RETURN)
.................... }
.................... 
.................... 
.................... void main()
0AB2:  CLRF   FF8
0AB4:  BCF    FD0.7
0AB6:  BSF    07.7
0AB8:  BSF    FB8.3
0ABA:  MOVLW  08
0ABC:  MOVWF  FAF
0ABE:  MOVLW  02
0AC0:  MOVWF  FB0
0AC2:  MOVLW  A6
0AC4:  MOVWF  FAC
0AC6:  MOVLW  90
0AC8:  MOVWF  FAB
0ACA:  CLRF   1C
0ACC:  CLRF   1D
0ACE:  CLRF   1E
0AD0:  CLRF   1F
0AD2:  CLRF   28
0AD4:  CLRF   2A
0AD6:  MOVLW  01
0AD8:  MOVWF  29
0ADA:  MOVF   FC1,W
0ADC:  ANDLW  C0
0ADE:  IORLW  0F
0AE0:  MOVWF  FC1
0AE2:  MOVLW  07
0AE4:  MOVWF  FB4
0AE6:  SETF   20
0AE8:  SETF   21
0AEA:  SETF   22
0AEC:  SETF   23
0AEE:  SETF   24
0AF0:  SETF   25
0AF2:  SETF   26
0AF4:  SETF   27
.................... { 
....................        set_up_port_ic_chot(); 
0AF6:  GOTO   01E0
....................        set_tris_b(0x3c);
0AFA:  MOVLW  3C
0AFC:  MOVWF  F93
....................        PORT_B_PULLUPS(TRUE);
0AFE:  BCF    FF1.7
....................  
....................        ENABLE_INTERRUPTS(GLOBAL);
0B00:  MOVLW  C0
0B02:  IORWF  FF2,F
....................        ENABLE_INTERRUPTS(INT_TIMER3);
0B04:  BSF    FA0.1
....................        SETUP_TIMER_3(T3_INTERNAL|T3_DIV_BY_8);
0B06:  MOVLW  B5
0B08:  MOVWF  FB1
....................        SET_TIMER3(3036);
0B0A:  MOVLW  0B
0B0C:  MOVWF  FB3
0B0E:  MOVLW  DC
0B10:  MOVWF  FB2
0B12:  NOP   
....................    
....................        while(true)
....................        { 
....................        
....................                switch (MODE)
0B14:  MOVFF  29,00
0B18:  MOVF   2A,W
0B1A:  MOVWF  03
0B1C:  BNZ   0B24
0B1E:  MOVLW  01
0B20:  SUBWF  00,W
0B22:  BZ    0B80
0B24:  MOVF   03,W
0B26:  BNZ   0B2E
0B28:  MOVLW  02
0B2A:  SUBWF  00,W
0B2C:  BZ    0B86
0B2E:  MOVF   03,W
0B30:  BNZ   0B38
0B32:  MOVLW  03
0B34:  SUBWF  00,W
0B36:  BZ    0B8C
0B38:  MOVF   03,W
0B3A:  BNZ   0B42
0B3C:  MOVLW  04
0B3E:  SUBWF  00,W
0B40:  BZ    0B92
0B42:  MOVF   03,W
0B44:  BNZ   0B4C
0B46:  MOVLW  05
0B48:  SUBWF  00,W
0B4A:  BZ    0B96
0B4C:  MOVF   03,W
0B4E:  BNZ   0B56
0B50:  MOVLW  06
0B52:  SUBWF  00,W
0B54:  BZ    0B9A
0B56:  MOVF   03,W
0B58:  BNZ   0B60
0B5A:  MOVLW  07
0B5C:  SUBWF  00,W
0B5E:  BZ    0B9E
0B60:  MOVF   03,W
0B62:  BNZ   0B6A
0B64:  MOVLW  08
0B66:  SUBWF  00,W
0B68:  BZ    0BA2
0B6A:  MOVF   03,W
0B6C:  BNZ   0B74
0B6E:  MOVLW  09
0B70:  SUBWF  00,W
0B72:  BZ    0BA6
0B74:  MOVF   03,W
0B76:  BNZ   0B7E
0B78:  MOVLW  0A
0B7A:  SUBWF  00,W
0B7C:  BZ    0BAA
0B7E:  BRA    0BAC
....................                {
....................                   case 1:
....................                            KIEU1(); 
0B80:  GOTO   023C
....................                            break;
0B84:  BRA    0BAC
....................                   case 2:
....................                            KIEU2();
0B86:  GOTO   02AE
....................                            break;
0B8A:  BRA    0BAC
....................                   case 3:
....................                            KIEU3();
0B8C:  GOTO   0338
....................                            break;  
0B90:  BRA    0BAC
....................                
....................                   case 4:
....................                            KIEU4();
0B92:  BRA    03C2
....................                            break;  
0B94:  BRA    0BAC
....................                   case 5:
....................                            KIEU5();
0B96:  BRA    0432
....................                            break;  
0B98:  BRA    0BAC
....................                   case 6:
....................                            KIEU6();
0B9A:  BRA    0516
....................                            break;  
0B9C:  BRA    0BAC
....................                   case 7:
....................                            KIEU7();
0B9E:  BRA    0676
....................                            break;  
0BA0:  BRA    0BAC
....................                   case 8:
....................                            KIEU8();
0BA2:  BRA    077E
....................                            break;  
0BA4:  BRA    0BAC
....................                   case 9:
....................                            KIEU9();
0BA6:  BRA    087C
....................                            break;  
0BA8:  BRA    0BAC
....................                   case 10:
....................                            KIEU10();
0BAA:  BRA    09A6
....................                            break;  
....................                
....................                
....................                
....................                
....................                
....................                
....................                
....................                   default:
....................                     // default statements
....................                }
0BAC:  BRA    0B14
.................... 
....................        }
.................... }
.................... 
.................... #INT_TIMER3
.................... VOID NGAT_TIMER3()
0BAE:  SLEEP 
.................... {
....................       if (input(UP)==0)
*
00D4:  BSF    F93.5
00D6:  BTFSC  F81.5
00D8:  BRA    0102
....................       { 
....................          delay_ms(20);
00DA:  MOVLW  14
00DC:  MOVWF  55
00DE:  RCALL  00AE
....................          {
....................             if (input(UP)==0)
00E0:  BSF    F93.5
00E2:  BTFSC  F81.5
00E4:  BRA    0102
....................             {
....................             MODE++;
00E6:  INCF   29,F
00E8:  BTFSC  FD8.2
00EA:  INCF   2A,F
....................             IF (MODE==11) MODE=1;
00EC:  MOVF   29,W
00EE:  SUBLW  0B
00F0:  BNZ   00FC
00F2:  MOVF   2A,F
00F4:  BNZ   00FC
00F6:  CLRF   2A
00F8:  MOVLW  01
00FA:  MOVWF  29
....................             while(!input(UP));
00FC:  BSF    F93.5
00FE:  BTFSS  F81.5
0100:  BRA    00FC
....................             }
....................          }
....................       }
.................... //!      down
....................             if (input(DW)==0)
0102:  BSF    F93.4
0104:  BTFSC  F81.4
0106:  BRA    0130
....................       { 
....................          delay_ms(20);
0108:  MOVLW  14
010A:  MOVWF  55
010C:  RCALL  00AE
....................          {
....................             if (input(DW)==0)
010E:  BSF    F93.4
0110:  BTFSC  F81.4
0112:  BRA    0130
....................             {
....................             MODE--;
0114:  MOVF   29,W
0116:  BTFSC  FD8.2
0118:  DECF   2A,F
011A:  DECF   29,F
....................             IF (MODE==0) MODE=10;
011C:  MOVF   29,F
011E:  BNZ   012A
0120:  MOVF   2A,F
0122:  BNZ   012A
0124:  CLRF   2A
0126:  MOVLW  0A
0128:  MOVWF  29
....................             while(!input(UP));
012A:  BSF    F93.5
012C:  BTFSS  F81.5
012E:  BRA    012A
....................             }
....................          }
....................       }
....................       if(input(CLR)==0) MODE=1;
0130:  BSF    F93.3
0132:  BTFSC  F81.3
0134:  BRA    013C
0136:  CLRF   2A
0138:  MOVLW  01
013A:  MOVWF  29
....................       set_timer3(3036);
013C:  MOVLW  0B
013E:  MOVWF  FB3
0140:  MOVLW  DC
0142:  MOVWF  FB2
0144:  NOP   
0146:  BCF    FA1.1
0148:  GOTO   0060
.................... }

Configuration Fuses:
   Word  1: CC27   PLL12 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
