CCS PCH C Compiler, Version 5.101, 43599               22-Sep-23 22:42

               Filename:   D:\TTVXL\TUAN3_NUTNHANDON\BT5_NUTNHAN_10HIEUUNG_INTERRUPT.lst

               ROM used:   3006 bytes (9%)
                           Largest free fragment is 29758
               RAM used:   63 (3%) at main() level
                           86 (4%) worst case
               Stack used: 4 locations (2 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   0AD2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.3
0056:  GOTO   0060
005A:  BTFSC  FF2.0
005C:  GOTO   00D4
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include <D:\TTVXL_TH\tv_pickit2_shift_1.c>
.................... #ifndef    __tv_pickit2_shift_1_c__
.................... #define    __tv_pickit2_shift_1_c__
.................... #include<tv_pickit2_shift_1.h>
.................... #ifndef    __TV_PICKIT2_SHIFT_1_H__
.................... #define    __TV_PICKIT2_SHIFT_1_H__
.................... 
.................... #include    <18f4550.h>
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #device     adc=10
.................... #fuses      nowdt,put,hs,noprotect,nolvp,cpudiv1
.................... #use        delay(clock=20000000)
00AE:  CLRF   FEA
00B0:  MOVLW  55
00B2:  MOVWF  FE9
00B4:  MOVF   FEF,W
00B6:  BZ    00D2
00B8:  MOVLW  06
00BA:  MOVWF  01
00BC:  CLRF   00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ 01,F
00C4:  BRA    00BC
00C6:  MOVLW  7B
00C8:  MOVWF  00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ FEF,F
00D0:  BRA    00B8
00D2:  RETURN 0
.................... //#use        i2c(master,slow,sda=pin_b0,scl=pin_b1)
.................... #use        rs232(baud=9600, xmit=pin_c6,rcv=pin_c7)
.................... //nut nhan:
.................... #define  bt0     pin_b5
.................... #define  bt1     pin_b4
.................... #define  bt2     pin_b3
.................... #define  bt3     pin_b2
.................... 
.................... #define  on      bt0       //dk led don, motor
.................... #define  off     bt1
.................... #define  inv     bt2
.................... 
.................... #define  up      bt0    //dk led don
.................... #define  dw      bt1
.................... #define  clr     bt2
.................... #define  mod     bt3
.................... 
.................... #define  stop    bt3
.................... 
.................... #define  on1     bt0     
.................... #define  off1    bt1
.................... #define  on2     bt2       
.................... #define  off2    bt3
.................... 
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... #define      ssdo             pin_e2         //chung tat ca
.................... #define      ssck             pin_e0         //chung tat ca
.................... #define      g_all            pin_d0         //a - 4 byte
.................... #define      rck_lcd20x4      pin_d2         //a - 2 byte dao
.................... #define      rck_buzerelay    pin_d3     //b - 1 byte 
.................... #define      rck_32led        pin_d4         //a - 4 byte
.................... #define      rck_8ledquet     pin_d5         //b - 2 byte dao
.................... #define      rck_4led7doan    pin_d6         //a - 4 byte
.................... #define      rck_matranled    pin_d7         //b - 3 byte dao
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //khai bao du lieu 16 bit cho module relay, triac, buzzer, dong co
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... unsigned int16 rbdc;
.................... #bit step_motor_enable  = rbdc.0    //1=ena,0=dis
.................... #bit step_motor_in1     = rbdc.1    
.................... #bit step_motor_in2     = rbdc.2
.................... #bit step_motor_in3     = rbdc.3
.................... #bit step_motor_in4     = rbdc.4
.................... #bit dc_enable          = rbdc.5    //1=ena,0=dis
.................... #bit pwrkey             = rbdc.6    //khoi tao sim900
.................... #bit buzzer             = rbdc.8    //1=on,0=off
.................... #bit triac_1            = rbdc.9    //1=on,0=off
.................... #bit triac_2            = rbdc.10   //1=on,0=off
.................... #bit relay_1            = rbdc.11   //0=on,1=off
.................... #bit relay_2            = rbdc.12   //0=on,1=off
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   
.................... const unsigned char ma7doan[16]= {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
.................... 0x80,0x90,0x88, 0x83, 0xc6, 0xa1, 0x86, 0x8e};
.................... #define     maso0    0xc0
.................... #define     maso1    0xf9
.................... #define     maso2    0xa4
.................... #define     maso3    0xb0
.................... #define     maso4    0x99
.................... #define     maso5    0x92
.................... #define     maso6    0x82
.................... #define     maso7    0xf8
.................... #endif
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
.................... //ham 102 xuat 1 byte ra thanh ghi dich
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... void xuat_1byte(unsigned int8 x)
.................... {
....................    unsigned int8 sb;   
....................    #bit bseri  = x.7
....................    for(sb=0;sb<8;sb++)
*
013A:  CLRF   54
013C:  MOVF   54,W
013E:  SUBLW  07
0140:  BNC   015E
....................       {                                                 
....................          output_bit(ssdo,bseri);    
0142:  BTFSC  53.7
0144:  BRA    014A
0146:  BCF    F8D.2
0148:  BRA    014C
014A:  BSF    F8D.2
014C:  BCF    F96.2
....................          output_low(ssck); output_high(ssck);
014E:  BCF    F96.0
0150:  BCF    F8D.0
0152:  BCF    F96.0
0154:  BSF    F8D.0
....................          x= x<<1;         
0156:  BCF    FD8.0
0158:  RLCF   53,F
015A:  INCF   54,F
015C:  BRA    013C
....................      }
015E:  RETURN 0
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
.................... //ham 301
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 4 byte ra 32 led don
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_32led_don_4byte(unsigned int8 bld3,bld2,bld1,bld0)
.................... {     
....................       xuat_1byte(bld3);          
*
0208:  MOVFF  4F,53
020C:  RCALL  013A
....................       xuat_1byte(bld2);
020E:  MOVFF  50,53
0212:  RCALL  013A
....................       xuat_1byte(bld1);          
0214:  MOVFF  51,53
0218:  RCALL  013A
....................       xuat_1byte(bld0);                              
021A:  MOVFF  52,53
021E:  RCALL  013A
....................       output_high(rck_32led);    
0220:  BCF    F95.4
0222:  BSF    F8C.4
....................       output_low(rck_32led);
0224:  BCF    F95.4
0226:  BCF    F8C.4
0228:  RETURN 0
....................     
.................... }
.................... //ham 302
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 2 word 16 bitra 32 led don
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_32led_don_2word(unsigned int16 wld1, unsigned int16 wld0)
.................... {     
....................      unsigned int8  b3,b2,b1,b0;
....................      b3 = wld1>>8;  b2 = wld1; 
....................      b1 = wld0>>8;  b0 = wld0;
....................      xuat_32led_don_4byte(b3,b2,b1,b0);
.................... }
.................... //ham 303
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 1 double word ra 32 led don
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_32led_don_1dw(unsigned long long dwld)
.................... {     
....................      unsigned int16  wd1,wd0;
....................      wd1 = dwld>>16;  wd0 = dwld;
....................      xuat_32led_don_2word(wd1,wd0);
.................... }
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... //xuat 1 bit roi tra lai ket qua sau khi dich di 1 bit
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... unsigned  int8 xuat_1bit(unsigned int8 bytexuat)
.................... {
....................       unsigned int8   xbitx;   
....................       #bit bserix  = xbitx.0
....................       xbitx = bytexuat;
....................                                             
....................       output_bit(ssdo,bserix);    
....................       output_low(ssck); output_high(ssck);
....................       xbitx= xbitx>>1;   
....................       return(xbitx);  
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... //ham 103: xuat 1 word ra thanh ghi dich
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... void xuat_1word(unsigned int16 w)
.................... {  
....................    unsigned int8 b1,b0;
....................    b1 = w>>8; b0 = w;
*
0160:  MOVFF  40,41
0164:  MOVFF  3F,42
....................    xuat_1byte(b1);    
0168:  MOVFF  41,53
016C:  RCALL  013A
....................    xuat_1byte(b0);
016E:  MOVFF  42,53
0172:  RCALL  013A
0174:  RETURN 0
.................... }   
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     
.................... //ham 104: xoa cac module 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  
.................... void xoa_tat_6module()                          
.................... {                                                                                              
....................    xuat_1word(0);                             
0176:  CLRF   40
0178:  CLRF   3F
017A:  RCALL  0160
....................    xuat_1word(0); 
017C:  CLRF   40
017E:  CLRF   3F
0180:  RCALL  0160
....................    xuat_1word(0);                             
0182:  CLRF   40
0184:  CLRF   3F
0186:  RCALL  0160
....................    xuat_1word(0);                                    
0188:  CLRF   40
018A:  CLRF   3F
018C:  RCALL  0160
....................    
....................    output_high(rck_buzerelay);   
018E:  BCF    F95.3
0190:  BSF    F8C.3
....................    output_low(rck_buzerelay);
0192:  BCF    F95.3
0194:  BCF    F8C.3
....................    
....................    output_high(rck_32led);
0196:  BCF    F95.4
0198:  BSF    F8C.4
....................    output_low(rck_32led); 
019A:  BCF    F95.4
019C:  BCF    F8C.4
....................    
....................    output_high(rck_8ledquet);   
019E:  BCF    F95.5
01A0:  BSF    F8C.5
....................    output_low(rck_8ledquet);   
01A2:  BCF    F95.5
01A4:  BCF    F8C.5
....................                                  
....................    output_high(rck_matranled);          
01A6:  BCF    F95.7
01A8:  BSF    F8C.7
....................    output_low(rck_matranled);   
01AA:  BCF    F95.7
01AC:  BCF    F8C.7
....................                            
....................    output_high(rck_lcd20x4);   
01AE:  BCF    F95.2
01B0:  BSF    F8C.2
....................    output_low(rck_lcd20x4);      
01B2:  BCF    F95.2
01B4:  BCF    F8C.2
....................                                                                           
....................    xuat_1word(0xffff); 
01B6:  SETF   40
01B8:  SETF   3F
01BA:  RCALL  0160
....................    xuat_1word(0xffff); 
01BC:  SETF   40
01BE:  SETF   3F
01C0:  RCALL  0160
....................    output_high(rck_4led7doan);       
01C2:  BCF    F95.6
01C4:  BSF    F8C.6
....................    output_low(rck_4led7doan);                                                                      
01C6:  BCF    F95.6
01C8:  BCF    F8C.6
01CA:  GOTO   01E6 (RETURN)
.................... }             
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
.................... //ham 101
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... //ham khoi tao cac port va ic chot
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    
.................... void set_up_port_ic_chot()
.................... {     
....................    set_tris_a(0xff);    set_tris_b(0x3c);                                                   
01CE:  MOVLW  FF
01D0:  MOVWF  F92
01D2:  MOVLW  3C
01D4:  MOVWF  F93
....................    set_tris_c(0xf1);    set_tris_e(0x00);                                               
01D6:  MOVLW  F1
01D8:  MOVWF  F94
01DA:  MOVLW  00
01DC:  MOVWF  F96
....................    set_tris_d(0x00);    
01DE:  MOVWF  F95
....................    output_d(0x00); 
01E0:  CLRF   F95
01E2:  CLRF   F8C
....................    xoa_tat_6module();
01E4:  BRA    0176
....................    port_b_pullups(0xff);          
01E6:  BCF    FF1.7
....................    rbdc=0;               
01E8:  CLRF   1B
01EA:  CLRF   1A
....................             
....................    setup_adc(adc_clock_div_32);        
01EC:  MOVF   FC0,W
01EE:  ANDLW  C0
01F0:  IORLW  02
01F2:  MOVWF  FC0
01F4:  BSF    FC0.7
01F6:  BSF    FC2.0
....................    setup_adc_ports(an0_to_an2|vss_vdd); 
01F8:  MOVF   FC1,W
01FA:  ANDLW  C0
01FC:  IORLW  0C
01FE:  MOVWF  FC1
....................    output_low(g_all);        
0200:  BCF    F95.0
0202:  BCF    F8C.0
0204:  GOTO   0B1A (RETURN)
.................... }
.................... //ham 104
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 4 byte ra 4 led 7 doan
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_4led_7doan_4so(unsigned int bl743,bl742,bl741,bl740)
.................... {     
....................       xuat_1byte(bl740);   xuat_1byte(bl741);
....................       xuat_1byte(bl742);   xuat_1byte(bl743);       
....................       output_low(rck_4led7doan);   
....................       output_high(rck_4led7doan);
.................... 
.................... }
.................... //ham 404
.................... void xuat_4led_7doan_3so(unsigned int bl742,bl741,bl740)
.................... {     
....................      xuat_4led_7doan_4so(0xff,bl742,bl741,bl740);
.................... }
.................... //ham 403
.................... void xuat_4led_7doan_2so(unsigned int bl741,bl740)
.................... {     
....................      xuat_4led_7doan_4so(0xff,0xff,bl741,bl740);
.................... }
.................... //ham 402
.................... void xuat_4led_7doan_1so(unsigned int bl740)
.................... {     
....................      xuat_4led_7doan_4so(0xff,0xff,0xff,bl740);
.................... }
.................... 
.................... //ham 405
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi du lieu 16 bit tren 4 led 7 doan
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void  xuat_4led_7doan_giaima_xoa_so0 (unsigned int16 tam)
.................... {         
....................       unsigned int8 ht[4]={0xff,0xff,0xff,0xff},i=0;
....................       do
....................       {
....................           ht[i]= ma7doan[tam%10];
....................           tam/=10;i++;
....................       }
....................       while(tam);
....................       xuat_4led_7doan_4so(ht[3],ht[2],ht[1],ht[0]);
.................... }
.................... 
.................... void  xuat_4led_7doan_2_so (unsigned int8 bh,bl)
.................... {         
....................  xuat_4led_7doan_4so(ma7doan[bh/10],ma7doan[bh%10],ma7doan[bl/10],ma7doan[bl%10]);   
.................... }
.................... 
.................... unsigned int8 lcddata=0; 
.................... unsigned int8 lcdcontrol=0;
.................... unsigned int8 glcddata=0;
.................... unsigned int8 glcdcontrol=0; 
.................... //ham 701
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat du lieu 4 byte ra glcd va lcd
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_glcd_lcd()
.................... {      
....................     xuat_1byte(glcdcontrol);             
....................     xuat_1byte(glcddata);
....................     xuat_1byte(lcdcontrol);       
....................     xuat_1byte(lcddata);      
....................          
....................     output_high(rck_lcd20x4);     
....................     output_low(rck_lcd20x4);
.................... }
.................... //ham 702
.................... void xuat_lcd20x4(unsigned int8 lcd_signal,lcd_ins_hthi)
.................... {     
....................     lcdcontrol = ~lcd_signal;
....................     lcddata    = ~lcd_ins_hthi;      
....................     xuat_glcd_lcd();
.................... }
.................... //ham 703
.................... void xuat_glcd128x64(unsigned int8 glcd_signal,glcd_ins_hthi)
.................... {     
....................     glcdcontrol = ~glcd_signal;
....................     glcddata    = ~glcd_ins_hthi;     
....................     xuat_glcd_lcd();
.................... }
.................... //ham 501
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 2 byte ra dk 1 led quet sang
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_8led_7doan_quet_1(unsigned int ma,so_hthi)
.................... {     
....................       xuat_1byte(~ma);   
....................       xuat_1byte(~so_hthi);
....................       output_high(rck_8ledquet); 
....................       output_low(rck_8ledquet);
.................... }
.................... //ham 502
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat 2 byte ra tat 8 led quet
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_8led_7doan_quet_tat_led()
.................... {
....................    xuat_8led_7doan_quet_1(0xff,0xff);
.................... }
.................... //ham 503
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi led theo thu tu
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... const unsigned char ttledquet[8]= {0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
.................... void xuat_8led_7doan_quet_2(unsigned int thutuled,so_hthi)
.................... {         
....................       xuat_1byte(~ (ttledquet[thutuled]));   
....................       xuat_1byte(~so_hthi);     
....................       output_high(rck_8ledquet); 
....................       output_low(rck_8ledquet);
.................... }
.................... //ham 504
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi 8 so tren 8 led quet - co kiem tra
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... unsigned char led_7dq[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
.................... unsigned int8 tt8led=0;
.................... void hien_thi_8led_7doan_quet()
.................... {     
....................       for(tt8led=0;tt8led<8;tt8led++)
....................          if (led_7dq[tt8led]!=0xff)
....................          {           
....................             xuat_8led_7doan_quet_2(tt8led, led_7dq[tt8led]);
....................             delay_us(100);
....................             xuat_8led_7doan_quet_tat_led();           
....................             }
.................... }
.................... //ham 505
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con hien thi 8 so tren 8 led quet - khong kiem tra
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void hien_thi_8led_7doan_quet_all()
.................... {     
....................       for(tt8led=0;tt8led<8;tt8led++)         
....................          {           
....................             xuat_8led_7doan_quet_2(tt8led, led_7dq[tt8led]);
....................             delay_us(100);
....................             xuat_8led_7doan_quet_tat_led();           
....................             }
.................... }
.................... 
.................... void delay_quet_8led(unsigned int16 dl)
.................... { 
....................       unsigned int8 i;
....................       for (i=0; i<dl;i++)
....................       hien_thi_8led_7doan_quet_all();
.................... } 
.................... 
.................... void giai_ma_gan_cho_8led_quet_16_xoa(unsigned int16 x)
.................... {     
....................       led_7dq[0]= ma7doan [x %10];    
....................       led_7dq[1]= ma7doan [x/10%10];
....................       led_7dq[2]= ma7doan [x/100%10];    
....................       led_7dq[3]= ma7doan [x/1000%10];
....................       led_7dq[4]= ma7doan [x/10000%10];
....................       if (led_7dq[4]==maso0) 
....................       {
....................             led_7dq[4]=0xff;
....................             if (led_7dq[3]==maso0) 
....................             {
....................                led_7dq[3]=0xff;
....................                if (led_7dq[2]==maso0) 
....................                {
....................                   led_7dq[2]=0xff;
....................                   if (led_7dq[1]==maso0) 
....................                   {
....................                      led_7dq[1]=0xff;
....................                   }
....................                }
....................             }
....................       }
....................             
.................... }
.................... 
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx         
.................... void xuat_2byte(unsigned int16 x)
.................... {
....................    int8 sbb;
....................    #bit bserix  = x.15
....................    for (sbb=0;sbb<16;sbb++)
....................       {                                                 
....................          output_bit(ssdo,bserix);    
....................          output_low(ssck);         
....................          output_high(ssck);
....................          x= x<<1;         
....................      }
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat ra led ma tran
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_matranled(unsigned int16 mahang,unsigned int16 macot1,
.................... unsigned int16 macot2,unsigned int16 macot3)
.................... {      
....................       xuat_2byte(macot3);
....................       xuat_2byte(macot2);
....................       xuat_2byte(macot1);
....................       xuat_2byte(mahang);     
.................... 
....................       output_high(rck_matranled); 
....................       output_low(rck_matranled);
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //chuong trinh con xuat ra led ma tran
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void tat_matranled()
.................... {      
....................       xuat_2byte(0);
....................       xuat_2byte(0);
....................       xuat_2byte(0);
....................       xuat_2byte(0);           
....................       output_high(rck_matranled); output_low(rck_matranled); 
.................... }
.................... unsigned  int8 hieu_chinh_4bit_cao(unsigned int8 xzy)
.................... {
....................       int1  btg;
....................       unsigned int8   bx;   
....................       #bit bit4  = bx.4
....................       #bit bit5  = bx.5
....................       #bit bit6  = bx.6
....................       #bit bit7  = bx.7
....................       bx=xzy;
....................       btg=bit4;   bit4=bit7;  bit7=btg;
....................       btg=bit5;   bit5=bit6;  bit6=btg;      
....................       return(bx);  
.................... }
.................... //ham 601
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... //module dieu khien relay,triac, buzzer, dong co, sim
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void xuat_buzzer_relay()
.................... {     
....................    unsigned int8 rbdc1,rbdc2;
....................       rbdc1=rbdc; rbdc2=rbdc>>8;      
....................       xuat_1byte(rbdc2);      
....................       xuat_1byte(rbdc1);
....................       
....................       output_high(rck_buzerelay);   
....................       output_low(rck_buzerelay);
.................... }
.................... //ham 602
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void buzzer_on()
.................... {    
....................       buzzer=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 603
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void buzzer_off()
.................... {     
....................       buzzer=0;
....................       xuat_buzzer_relay();
.................... }
.................... //ham 604
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_on()
.................... {    
....................       relay_1=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 603
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_off()
.................... {    
....................       relay_1=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 604
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_2_on()
.................... {    
....................       relay_2=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 607
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_2_off()
.................... {    
....................       relay_2=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 608
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_relay_2_on()
.................... {    
....................       relay_1=1;  relay_2=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 609
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void relay_1_relay_2_off()
.................... {    
....................       relay_1=0;  relay_2=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 610
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_1_on()
.................... {    
....................       triac_1=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 611
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_1_off()
.................... {    
....................       triac_1=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 612
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_2_on()
.................... {    
....................       triac_2=1;
....................       xuat_buzzer_relay();         
.................... }
.................... //ham 613
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void triac_2_off()
.................... {    
....................       triac_2=0;
....................       xuat_buzzer_relay();         
.................... }
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... 
.................... void ggmmaa()
.................... {
....................    unsigned int8   x;   
....................    x=ma7doan[1];
.................... }
.................... #endif
....................  
.................... 
.................... unsigned int16 MODE=1;
.................... unsigned int32 y,i,k,run,save;
.................... VOID CLR_BUTTON()
.................... {
....................    if(input(CLR)==0) MODE=1;
*
022A:  BSF    F93.3
022C:  BTFSC  F81.3
022E:  BRA    0236
0230:  CLRF   2A
0232:  MOVLW  01
0234:  MOVWF  29
0236:  RETURN 0
.................... }
.................... VOID KIEU1()
.................... //!CHOP_TAT_2PORT_XENKE
.................... {  I=0;
0238:  CLRF   32
023A:  CLRF   31
023C:  CLRF   30
023E:  CLRF   2F
....................    WHILE(I<10)
0240:  MOVF   32,F
0242:  BNZ   02A8
0244:  MOVF   31,F
0246:  BNZ   02A8
0248:  MOVF   30,F
024A:  BNZ   02A8
024C:  MOVF   2F,W
024E:  SUBLW  09
0250:  BNC   02A8
....................    {  
....................       xuat_32led_don_4byte(0XFF,0,0,0xFF);
0252:  SETF   4F
0254:  CLRF   50
0256:  CLRF   51
0258:  SETF   52
025A:  RCALL  0208
025C:  CLRF   19
025E:  BTFSC  FF2.7
0260:  BSF    19.7
0262:  BCF    FF2.7
....................       DELAY_MS(110);
0264:  MOVLW  6E
0266:  MOVWF  55
0268:  RCALL  00AE
026A:  BTFSC  19.7
026C:  BSF    FF2.7
....................       xuat_32led_don_4byte(0,0xFF,0xFF,0);
026E:  CLRF   4F
0270:  SETF   50
0272:  SETF   51
0274:  CLRF   52
0276:  RCALL  0208
0278:  CLRF   19
027A:  BTFSC  FF2.7
027C:  BSF    19.7
027E:  BCF    FF2.7
....................       DELAY_MS(110);
0280:  MOVLW  6E
0282:  MOVWF  55
0284:  RCALL  00AE
0286:  BTFSC  19.7
0288:  BSF    FF2.7
....................       I++;
028A:  MOVLW  01
028C:  ADDWF  2F,F
028E:  BTFSC  FD8.0
0290:  INCF   30,F
0292:  BTFSC  FD8.2
0294:  INCF   31,F
0296:  BTFSC  FD8.2
0298:  INCF   32,F
....................       CLR_BUTTON();
029A:  RCALL  022A
....................       if(mode!=1) break; 
029C:  DECFSZ 29,W
029E:  BRA    02A4
02A0:  MOVF   2A,F
02A2:  BTFSS  FD8.2
02A4:  BRA    02A8
02A6:  BRA    0240
....................    }
02A8:  GOTO   0BBE (RETURN)
.................... }
.................... void KIEU2()
.................... {
.................... //!SANG_DICH_3LED_TSP
....................    for(i=0;i<=32;i++)
02AC:  CLRF   32
02AE:  CLRF   31
02B0:  CLRF   30
02B2:  CLRF   2F
02B4:  MOVF   32,F
02B6:  BNZ   0334
02B8:  MOVF   31,F
02BA:  BNZ   0334
02BC:  MOVF   30,F
02BE:  BNZ   0334
02C0:  MOVF   2F,W
02C2:  SUBLW  20
02C4:  BNC   0334
....................    {  CLR_BUTTON();
02C6:  RCALL  022A
....................       y=0xE0000000>>i;
02C8:  MOVLW  E0
02CA:  MOVWF  2E
02CC:  CLRF   2D
02CE:  CLRF   2C
02D0:  CLRF   2B
02D2:  MOVF   2F,W
02D4:  MOVWF  3F
02D6:  BZ    02E6
02D8:  BCF    FD8.0
02DA:  RRCF   2E,F
02DC:  RRCF   2D,F
02DE:  RRCF   2C,F
02E0:  RRCF   2B,F
02E2:  DECFSZ 3F,F
02E4:  BRA    02D8
....................       xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
02E6:  CLRF   41
02E8:  CLRF   42
02EA:  CLRF   43
02EC:  CLRF   47
02EE:  CLRF   48
02F0:  CLRF   4D
02F2:  MOVFF  2E,4F
02F6:  MOVFF  2D,50
02FA:  MOVFF  2C,51
02FE:  MOVFF  2B,52
0302:  RCALL  0208
0304:  CLRF   19
0306:  BTFSC  FF2.7
0308:  BSF    19.7
030A:  BCF    FF2.7
....................       delay_ms(50);
030C:  MOVLW  32
030E:  MOVWF  55
0310:  RCALL  00AE
0312:  BTFSC  19.7
0314:  BSF    FF2.7
....................       if(mode!=2) break; 
0316:  MOVF   29,W
0318:  SUBLW  02
031A:  BNZ   0320
031C:  MOVF   2A,F
031E:  BTFSS  FD8.2
0320:  BRA    0334
0322:  MOVLW  01
0324:  ADDWF  2F,F
0326:  BTFSC  FD8.0
0328:  INCF   30,F
032A:  BTFSC  FD8.2
032C:  INCF   31,F
032E:  BTFSC  FD8.2
0330:  INCF   32,F
0332:  BRA    02B4
....................    }
0334:  GOTO   0BBE (RETURN)
.................... } 
.................... void KIEU3()
.................... {
.................... //!SANG_DICH_3LED_PST
....................    for(i=0;i<=32;i++)
0338:  CLRF   32
033A:  CLRF   31
033C:  CLRF   30
033E:  CLRF   2F
0340:  MOVF   32,F
0342:  BNZ   03C0
0344:  MOVF   31,F
0346:  BNZ   03C0
0348:  MOVF   30,F
034A:  BNZ   03C0
034C:  MOVF   2F,W
034E:  SUBLW  20
0350:  BNC   03C0
....................    {
....................    CLR_BUTTON();
0352:  RCALL  022A
....................    y=0x00000007<<i;
0354:  CLRF   2E
0356:  CLRF   2D
0358:  CLRF   2C
035A:  MOVLW  07
035C:  MOVWF  2B
035E:  MOVF   2F,W
0360:  MOVWF  3F
0362:  BZ    0372
0364:  BCF    FD8.0
0366:  RLCF   2B,F
0368:  RLCF   2C,F
036A:  RLCF   2D,F
036C:  RLCF   2E,F
036E:  DECFSZ 3F,F
0370:  BRA    0364
....................    xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0372:  CLRF   41
0374:  CLRF   42
0376:  CLRF   43
0378:  CLRF   47
037A:  CLRF   48
037C:  CLRF   4D
037E:  MOVFF  2E,4F
0382:  MOVFF  2D,50
0386:  MOVFF  2C,51
038A:  MOVFF  2B,52
038E:  RCALL  0208
0390:  CLRF   19
0392:  BTFSC  FF2.7
0394:  BSF    19.7
0396:  BCF    FF2.7
....................    delay_ms(50);
0398:  MOVLW  32
039A:  MOVWF  55
039C:  RCALL  00AE
039E:  BTFSC  19.7
03A0:  BSF    FF2.7
....................    if(mode!=3) break; 
03A2:  MOVF   29,W
03A4:  SUBLW  03
03A6:  BNZ   03AC
03A8:  MOVF   2A,F
03AA:  BTFSS  FD8.2
03AC:  BRA    03C0
03AE:  MOVLW  01
03B0:  ADDWF  2F,F
03B2:  BTFSC  FD8.0
03B4:  INCF   30,F
03B6:  BTFSC  FD8.2
03B8:  INCF   31,F
03BA:  BTFSC  FD8.2
03BC:  INCF   32,F
03BE:  BRA    0340
....................    }
03C0:  GOTO   0BBE (RETURN)
.................... }
.................... VOID KIEU4()
.................... {       
.................... //!CHOP_TAT
....................    y=0; i=0;
03C4:  CLRF   2E
03C6:  CLRF   2D
03C8:  CLRF   2C
03CA:  CLRF   2B
03CC:  CLRF   32
03CE:  CLRF   31
03D0:  CLRF   30
03D2:  CLRF   2F
....................    while(i<10)
03D4:  MOVF   32,F
03D6:  BNZ   0432
03D8:  MOVF   31,F
03DA:  BNZ   0432
03DC:  MOVF   30,F
03DE:  BNZ   0432
03E0:  MOVF   2F,W
03E2:  SUBLW  09
03E4:  BNC   0432
....................    {  CLR_BUTTON();       
03E6:  RCALL  022A
....................       xuat_32led_don_4byte(y,y,y,y);
03E8:  MOVFF  2B,4F
03EC:  MOVFF  2B,50
03F0:  MOVFF  2B,51
03F4:  MOVFF  2B,52
03F8:  RCALL  0208
03FA:  CLRF   19
03FC:  BTFSC  FF2.7
03FE:  BSF    19.7
0400:  BCF    FF2.7
....................       delay_ms(200);
0402:  MOVLW  C8
0404:  MOVWF  55
0406:  RCALL  00AE
0408:  BTFSC  19.7
040A:  BSF    FF2.7
....................       y= ~y;
040C:  COMF   2B,F
040E:  COMF   2C,F
0410:  COMF   2D,F
0412:  COMF   2E,F
....................       i++;
0414:  MOVLW  01
0416:  ADDWF  2F,F
0418:  BTFSC  FD8.0
041A:  INCF   30,F
041C:  BTFSC  FD8.2
041E:  INCF   31,F
0420:  BTFSC  FD8.2
0422:  INCF   32,F
....................       if(mode!=4) break; 
0424:  MOVF   29,W
0426:  SUBLW  04
0428:  BNZ   042E
042A:  MOVF   2A,F
042C:  BTFSS  FD8.2
042E:  BRA    0432
0430:  BRA    03D4
....................    }
0432:  GOTO   0BBE (RETURN)
.................... 
.................... }
.................... VOID KIEU5()
.................... {
.................... //! SANG DON 32LED
....................    save=0;
0436:  CLRF   3E
0438:  CLRF   3D
043A:  CLRF   3C
043C:  CLRF   3B
....................    for(k=0;k<32;k++)
043E:  CLRF   36
0440:  CLRF   35
0442:  CLRF   34
0444:  CLRF   33
0446:  MOVF   36,F
0448:  BNZ   0518
044A:  MOVF   35,F
044C:  BNZ   0518
044E:  MOVF   34,F
0450:  BNZ   0518
0452:  MOVF   33,W
0454:  SUBLW  1F
0456:  BNC   0518
....................    {  
....................       
....................       run=0x00000001;
0458:  CLRF   3A
045A:  CLRF   39
045C:  CLRF   38
045E:  MOVLW  01
0460:  MOVWF  37
....................       for(i=k; i<32;i++)
0462:  MOVFF  36,32
0466:  MOVFF  35,31
046A:  MOVFF  34,30
046E:  MOVFF  33,2F
0472:  MOVF   32,F
0474:  BNZ   04F6
0476:  MOVF   31,F
0478:  BNZ   04F6
047A:  MOVF   30,F
047C:  BNZ   04F6
047E:  MOVF   2F,W
0480:  SUBLW  1F
0482:  BNC   04F6
....................       {
....................       CLR_BUTTON();
0484:  RCALL  022A
....................       y=run|save;
0486:  MOVF   37,W
0488:  IORWF  3B,W
048A:  MOVWF  2B
048C:  MOVF   38,W
048E:  IORWF  3C,W
0490:  MOVWF  2C
0492:  MOVF   39,W
0494:  IORWF  3D,W
0496:  MOVWF  2D
0498:  MOVF   3A,W
049A:  IORWF  3E,W
049C:  MOVWF  2E
....................       xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
049E:  CLRF   41
04A0:  CLRF   42
04A2:  CLRF   43
04A4:  CLRF   47
04A6:  CLRF   48
04A8:  CLRF   4D
04AA:  MOVFF  2E,4F
04AE:  MOVFF  2D,50
04B2:  MOVFF  2C,51
04B6:  MOVFF  2B,52
04BA:  RCALL  0208
04BC:  CLRF   19
04BE:  BTFSC  FF2.7
04C0:  BSF    19.7
04C2:  BCF    FF2.7
....................       delay_ms(10);
04C4:  MOVLW  0A
04C6:  MOVWF  55
04C8:  RCALL  00AE
04CA:  BTFSC  19.7
04CC:  BSF    FF2.7
....................       run=run<<1;
04CE:  BCF    FD8.0
04D0:  RLCF   37,F
04D2:  RLCF   38,F
04D4:  RLCF   39,F
04D6:  RLCF   3A,F
....................       if(mode!=5) break; 
04D8:  MOVF   29,W
04DA:  SUBLW  05
04DC:  BNZ   04E2
04DE:  MOVF   2A,F
04E0:  BTFSS  FD8.2
04E2:  BRA    04F6
04E4:  MOVLW  01
04E6:  ADDWF  2F,F
04E8:  BTFSC  FD8.0
04EA:  INCF   30,F
04EC:  BTFSC  FD8.2
04EE:  INCF   31,F
04F0:  BTFSC  FD8.2
04F2:  INCF   32,F
04F4:  BRA    0472
....................       }
....................       save=y;
04F6:  MOVFF  2E,3E
04FA:  MOVFF  2D,3D
04FE:  MOVFF  2C,3C
0502:  MOVFF  2B,3B
0506:  MOVLW  01
0508:  ADDWF  33,F
050A:  BTFSC  FD8.0
050C:  INCF   34,F
050E:  BTFSC  FD8.2
0510:  INCF   35,F
0512:  BTFSC  FD8.2
0514:  INCF   36,F
0516:  BRA    0446
....................    }
0518:  GOTO   0BBE (RETURN)
.................... }
.................... VOID KIEU6()
.................... {
.................... //! TAT DAN DON 32LED
....................    Y=0XFFFFFF; 
051C:  CLRF   2E
051E:  SETF   2D
0520:  SETF   2C
0522:  SETF   2B
....................    xuat_32led_don_4byte(y>>24,y>>16,y>>8,y); DELAY_MS(100);
0524:  CLRF   41
0526:  CLRF   42
0528:  CLRF   43
052A:  CLRF   47
052C:  CLRF   48
052E:  CLRF   4D
0530:  MOVFF  2E,4F
0534:  MOVFF  2D,50
0538:  MOVFF  2C,51
053C:  MOVFF  2B,52
0540:  RCALL  0208
0542:  CLRF   19
0544:  BTFSC  FF2.7
0546:  BSF    19.7
0548:  BCF    FF2.7
054A:  MOVLW  64
054C:  MOVWF  55
054E:  RCALL  00AE
0550:  BTFSC  19.7
0552:  BSF    FF2.7
....................    Y=SAVE=0XFFFFFFFE;
0554:  SETF   3E
0556:  SETF   3D
0558:  SETF   3C
055A:  MOVLW  FE
055C:  MOVWF  3B
055E:  MOVFF  3E,2E
0562:  MOVFF  3D,2D
0566:  MOVFF  3C,2C
056A:  MOVFF  3B,2B
....................    FOR(I=0;I<32;I++)
056E:  CLRF   32
0570:  CLRF   31
0572:  CLRF   30
0574:  CLRF   2F
0576:  MOVF   32,F
0578:  BTFSS  FD8.2
057A:  BRA    067A
057C:  MOVF   31,F
057E:  BTFSS  FD8.2
0580:  BRA    067A
0582:  MOVF   30,F
0584:  BTFSS  FD8.2
0586:  BRA    067A
0588:  MOVF   2F,W
058A:  SUBLW  1F
058C:  BTFSS  FD8.0
058E:  BRA    067A
....................    {
....................       RUN=0X00000001<<I;
0590:  CLRF   3A
0592:  CLRF   39
0594:  CLRF   38
0596:  MOVLW  01
0598:  MOVWF  37
059A:  MOVF   2F,W
059C:  MOVWF  3F
059E:  BZ    05AE
05A0:  BCF    FD8.0
05A2:  RLCF   37,F
05A4:  RLCF   38,F
05A6:  RLCF   39,F
05A8:  RLCF   3A,F
05AA:  DECFSZ 3F,F
05AC:  BRA    05A0
....................       FOR(K=0;K<I+1;K++)
05AE:  CLRF   36
05B0:  CLRF   35
05B2:  CLRF   34
05B4:  CLRF   33
05B6:  MOVLW  01
05B8:  ADDWF  2F,W
05BA:  MOVWF  00
05BC:  MOVLW  00
05BE:  ADDWFC 30,W
05C0:  MOVWF  01
05C2:  MOVLW  00
05C4:  ADDWFC 31,W
05C6:  MOVWF  02
05C8:  MOVLW  00
05CA:  ADDWFC 32,W
05CC:  MOVWF  03
05CE:  MOVF   36,W
05D0:  SUBWF  03,W
05D2:  BNC   065E
05D4:  BNZ   05EC
05D6:  MOVF   35,W
05D8:  SUBWF  02,W
05DA:  BNC   065E
05DC:  BNZ   05EC
05DE:  MOVF   34,W
05E0:  SUBWF  01,W
05E2:  BNC   065E
05E4:  BNZ   05EC
05E6:  MOVF   00,W
05E8:  SUBWF  33,W
05EA:  BC    065E
....................          {
....................             CLR_BUTTON();
05EC:  RCALL  022A
....................             RUN=RUN>>1;
05EE:  BCF    FD8.0
05F0:  RRCF   3A,F
05F2:  RRCF   39,F
05F4:  RRCF   38,F
05F6:  RRCF   37,F
....................             Y=RUN|SAVE;
05F8:  MOVF   37,W
05FA:  IORWF  3B,W
05FC:  MOVWF  2B
05FE:  MOVF   38,W
0600:  IORWF  3C,W
0602:  MOVWF  2C
0604:  MOVF   39,W
0606:  IORWF  3D,W
0608:  MOVWF  2D
060A:  MOVF   3A,W
060C:  IORWF  3E,W
060E:  MOVWF  2E
....................             xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0610:  CLRF   41
0612:  CLRF   42
0614:  CLRF   43
0616:  CLRF   47
0618:  CLRF   48
061A:  CLRF   4D
061C:  MOVFF  2E,4F
0620:  MOVFF  2D,50
0624:  MOVFF  2C,51
0628:  MOVFF  2B,52
062C:  RCALL  0208
062E:  CLRF   19
0630:  BTFSC  FF2.7
0632:  BSF    19.7
0634:  BCF    FF2.7
....................             DELAY_MS(10);
0636:  MOVLW  0A
0638:  MOVWF  55
063A:  RCALL  00AE
063C:  BTFSC  19.7
063E:  BSF    FF2.7
....................             if(mode!=6) break; 
0640:  MOVF   29,W
0642:  SUBLW  06
0644:  BNZ   064A
0646:  MOVF   2A,F
0648:  BTFSS  FD8.2
064A:  BRA    065E
064C:  MOVLW  01
064E:  ADDWF  33,F
0650:  BTFSC  FD8.0
0652:  INCF   34,F
0654:  BTFSC  FD8.2
0656:  INCF   35,F
0658:  BTFSC  FD8.2
065A:  INCF   36,F
065C:  BRA    05B6
....................          }
....................          SAVE=SAVE<<1;
065E:  BCF    FD8.0
0660:  RLCF   3B,F
0662:  RLCF   3C,F
0664:  RLCF   3D,F
0666:  RLCF   3E,F
0668:  MOVLW  01
066A:  ADDWF  2F,F
066C:  BTFSC  FD8.0
066E:  INCF   30,F
0670:  BTFSC  FD8.2
0672:  INCF   31,F
0674:  BTFSC  FD8.2
0676:  INCF   32,F
0678:  BRA    0576
....................     }
067A:  GOTO   0BBE (RETURN)
.................... }
.................... VOID KIEU7()
.................... {
.................... //!         Sang dan PST
....................           for(i=0;i<32;i++)
067E:  CLRF   32
0680:  CLRF   31
0682:  CLRF   30
0684:  CLRF   2F
0686:  MOVF   32,F
0688:  BNZ   0712
068A:  MOVF   31,F
068C:  BNZ   0712
068E:  MOVF   30,F
0690:  BNZ   0712
0692:  MOVF   2F,W
0694:  SUBLW  1F
0696:  BNC   0712
....................           { CLR_BUTTON();
0698:  RCALL  022A
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
069A:  CLRF   41
069C:  CLRF   42
069E:  CLRF   43
06A0:  CLRF   47
06A2:  CLRF   48
06A4:  CLRF   4D
06A6:  MOVFF  2E,4F
06AA:  MOVFF  2D,50
06AE:  MOVFF  2C,51
06B2:  MOVFF  2B,52
06B6:  RCALL  0208
06B8:  CLRF   19
06BA:  BTFSC  FF2.7
06BC:  BSF    19.7
06BE:  BCF    FF2.7
....................              delay_ms(30);
06C0:  MOVLW  1E
06C2:  MOVWF  55
06C4:  RCALL  00AE
06C6:  BTFSC  19.7
06C8:  BSF    FF2.7
....................              y= (y<<1)+1;
06CA:  BCF    FD8.0
06CC:  RLCF   2B,W
06CE:  MOVWF  40
06D0:  RLCF   2C,W
06D2:  MOVWF  41
06D4:  RLCF   2D,W
06D6:  MOVWF  42
06D8:  RLCF   2E,W
06DA:  MOVWF  43
06DC:  MOVLW  01
06DE:  ADDWF  40,W
06E0:  MOVWF  2B
06E2:  MOVLW  00
06E4:  ADDWFC 41,W
06E6:  MOVWF  2C
06E8:  MOVLW  00
06EA:  ADDWFC 42,W
06EC:  MOVWF  2D
06EE:  MOVLW  00
06F0:  ADDWFC 43,W
06F2:  MOVWF  2E
....................              if(mode!=7) break;
06F4:  MOVF   29,W
06F6:  SUBLW  07
06F8:  BNZ   06FE
06FA:  MOVF   2A,F
06FC:  BTFSS  FD8.2
06FE:  BRA    0712
0700:  MOVLW  01
0702:  ADDWF  2F,F
0704:  BTFSC  FD8.0
0706:  INCF   30,F
0708:  BTFSC  FD8.2
070A:  INCF   31,F
070C:  BTFSC  FD8.2
070E:  INCF   32,F
0710:  BRA    0686
....................           }
....................           //!          Tat dan PST
....................           for(i=0;i<32;i++)
0712:  CLRF   32
0714:  CLRF   31
0716:  CLRF   30
0718:  CLRF   2F
071A:  MOVF   32,F
071C:  BNZ   0786
071E:  MOVF   31,F
0720:  BNZ   0786
0722:  MOVF   30,F
0724:  BNZ   0786
0726:  MOVF   2F,W
0728:  SUBLW  1F
072A:  BNC   0786
....................           { CLR_BUTTON();
072C:  RCALL  022A
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
072E:  CLRF   41
0730:  CLRF   42
0732:  CLRF   43
0734:  CLRF   47
0736:  CLRF   48
0738:  CLRF   4D
073A:  MOVFF  2E,4F
073E:  MOVFF  2D,50
0742:  MOVFF  2C,51
0746:  MOVFF  2B,52
074A:  RCALL  0208
074C:  CLRF   19
074E:  BTFSC  FF2.7
0750:  BSF    19.7
0752:  BCF    FF2.7
....................              delay_ms(30); 
0754:  MOVLW  1E
0756:  MOVWF  55
0758:  RCALL  00AE
075A:  BTFSC  19.7
075C:  BSF    FF2.7
....................              y= (y<<1);
075E:  BCF    FD8.0
0760:  RLCF   2B,F
0762:  RLCF   2C,F
0764:  RLCF   2D,F
0766:  RLCF   2E,F
....................              if(mode!=7) break;
0768:  MOVF   29,W
076A:  SUBLW  07
076C:  BNZ   0772
076E:  MOVF   2A,F
0770:  BTFSS  FD8.2
0772:  BRA    0786
0774:  MOVLW  01
0776:  ADDWF  2F,F
0778:  BTFSC  FD8.0
077A:  INCF   30,F
077C:  BTFSC  FD8.2
077E:  INCF   31,F
0780:  BTFSC  FD8.2
0782:  INCF   32,F
0784:  BRA    071A
....................           }
0786:  GOTO   0BBE (RETURN)
.................... }
.................... 
.................... VOID KIEU8()
.................... {
.................... //!          Sang dan TSP
....................           for(i=0;i<32;i++)
078A:  CLRF   32
078C:  CLRF   31
078E:  CLRF   30
0790:  CLRF   2F
0792:  MOVF   32,F
0794:  BNZ   0814
0796:  MOVF   31,F
0798:  BNZ   0814
079A:  MOVF   30,F
079C:  BNZ   0814
079E:  MOVF   2F,W
07A0:  SUBLW  1F
07A2:  BNC   0814
....................           { CLR_BUTTON();
07A4:  RCALL  022A
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
07A6:  CLRF   41
07A8:  CLRF   42
07AA:  CLRF   43
07AC:  CLRF   47
07AE:  CLRF   48
07B0:  CLRF   4D
07B2:  MOVFF  2E,4F
07B6:  MOVFF  2D,50
07BA:  MOVFF  2C,51
07BE:  MOVFF  2B,52
07C2:  RCALL  0208
07C4:  CLRF   19
07C6:  BTFSC  FF2.7
07C8:  BSF    19.7
07CA:  BCF    FF2.7
....................              delay_ms(30); 
07CC:  MOVLW  1E
07CE:  MOVWF  55
07D0:  RCALL  00AE
07D2:  BTFSC  19.7
07D4:  BSF    FF2.7
....................              y= (y>>1)+0x80000000;
07D6:  BCF    FD8.0
07D8:  RRCF   2E,W
07DA:  MOVWF  43
07DC:  RRCF   2D,W
07DE:  MOVWF  42
07E0:  RRCF   2C,W
07E2:  MOVWF  41
07E4:  RRCF   2B,W
07E6:  MOVWF  2B
07E8:  MOVFF  41,2C
07EC:  MOVFF  42,2D
07F0:  MOVLW  80
07F2:  ADDWF  43,W
07F4:  MOVWF  2E
....................              if(mode!=8) break;
07F6:  MOVF   29,W
07F8:  SUBLW  08
07FA:  BNZ   0800
07FC:  MOVF   2A,F
07FE:  BTFSS  FD8.2
0800:  BRA    0814
0802:  MOVLW  01
0804:  ADDWF  2F,F
0806:  BTFSC  FD8.0
0808:  INCF   30,F
080A:  BTFSC  FD8.2
080C:  INCF   31,F
080E:  BTFSC  FD8.2
0810:  INCF   32,F
0812:  BRA    0792
....................           }
....................           //!          Tat dan TSP
....................           for(i=0;i<32;i++)
0814:  CLRF   32
0816:  CLRF   31
0818:  CLRF   30
081A:  CLRF   2F
081C:  MOVF   32,F
081E:  BNZ   0888
0820:  MOVF   31,F
0822:  BNZ   0888
0824:  MOVF   30,F
0826:  BNZ   0888
0828:  MOVF   2F,W
082A:  SUBLW  1F
082C:  BNC   0888
....................           { CLR_BUTTON();
082E:  RCALL  022A
....................              xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0830:  CLRF   41
0832:  CLRF   42
0834:  CLRF   43
0836:  CLRF   47
0838:  CLRF   48
083A:  CLRF   4D
083C:  MOVFF  2E,4F
0840:  MOVFF  2D,50
0844:  MOVFF  2C,51
0848:  MOVFF  2B,52
084C:  RCALL  0208
084E:  CLRF   19
0850:  BTFSC  FF2.7
0852:  BSF    19.7
0854:  BCF    FF2.7
....................              delay_ms(30); 
0856:  MOVLW  1E
0858:  MOVWF  55
085A:  RCALL  00AE
085C:  BTFSC  19.7
085E:  BSF    FF2.7
....................              y= (y>>1);
0860:  BCF    FD8.0
0862:  RRCF   2E,F
0864:  RRCF   2D,F
0866:  RRCF   2C,F
0868:  RRCF   2B,F
....................              if(mode!=8) break;
086A:  MOVF   29,W
086C:  SUBLW  08
086E:  BNZ   0874
0870:  MOVF   2A,F
0872:  BTFSS  FD8.2
0874:  BRA    0888
0876:  MOVLW  01
0878:  ADDWF  2F,F
087A:  BTFSC  FD8.0
087C:  INCF   30,F
087E:  BTFSC  FD8.2
0880:  INCF   31,F
0882:  BTFSC  FD8.2
0884:  INCF   32,F
0886:  BRA    081C
....................           }
0888:  GOTO   0BBE (RETURN)
.................... }
.................... 
.................... VOID KIEU9()
.................... {
.................... //! DICH QUA LAI 1 LED
.................... Y = 0x00;  //! TAT TAT CA LED BAN DAU
088C:  CLRF   2E
088E:  CLRF   2D
0890:  CLRF   2C
0892:  CLRF   2B
.................... unsigned int8 dem=0;
0894:  CLRF   3F
....................     while (dem<2) {
0896:  MOVF   3F,W
0898:  SUBLW  01
089A:  BTFSS  FD8.0
089C:  BRA    09B6
....................         //! DICH SANG PHAI
....................         for (i = 0; i < 32; i++) 
089E:  CLRF   32
08A0:  CLRF   31
08A2:  CLRF   30
08A4:  CLRF   2F
08A6:  MOVF   32,F
08A8:  BNZ   0928
08AA:  MOVF   31,F
08AC:  BNZ   0928
08AE:  MOVF   30,F
08B0:  BNZ   0928
08B2:  MOVF   2F,W
08B4:  SUBLW  1F
08B6:  BNC   0928
....................         {
....................         CLR_BUTTON();
08B8:  RCALL  022A
....................         xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
08BA:  CLRF   42
08BC:  CLRF   43
08BE:  CLRF   44
08C0:  CLRF   48
08C2:  CLRF   49
08C4:  CLRF   4E
08C6:  MOVFF  2E,4F
08CA:  MOVFF  2D,50
08CE:  MOVFF  2C,51
08D2:  MOVFF  2B,52
08D6:  RCALL  0208
....................             Y = 1 << i;
08D8:  CLRF   2E
08DA:  CLRF   2D
08DC:  CLRF   2C
08DE:  MOVLW  01
08E0:  MOVWF  2B
08E2:  MOVF   2F,W
08E4:  MOVWF  40
08E6:  BZ    08F6
08E8:  BCF    FD8.0
08EA:  RLCF   2B,F
08EC:  RLCF   2C,F
08EE:  RLCF   2D,F
08F0:  RLCF   2E,F
08F2:  DECFSZ 40,F
08F4:  BRA    08E8
08F6:  CLRF   19
08F8:  BTFSC  FF2.7
08FA:  BSF    19.7
08FC:  BCF    FF2.7
....................             delay_ms(50);    
08FE:  MOVLW  32
0900:  MOVWF  55
0902:  CALL   00AE
0906:  BTFSC  19.7
0908:  BSF    FF2.7
....................             if(mode!=9) break;
090A:  MOVF   29,W
090C:  SUBLW  09
090E:  BNZ   0914
0910:  MOVF   2A,F
0912:  BTFSS  FD8.2
0914:  BRA    0928
0916:  MOVLW  01
0918:  ADDWF  2F,F
091A:  BTFSC  FD8.0
091C:  INCF   30,F
091E:  BTFSC  FD8.2
0920:  INCF   31,F
0922:  BTFSC  FD8.2
0924:  INCF   32,F
0926:  BRA    08A6
....................         }
.................... 
.................... //!         DICH SANG TRAI
....................         for (i = 0; i < 32; i++) 
0928:  CLRF   32
092A:  CLRF   31
092C:  CLRF   30
092E:  CLRF   2F
0930:  MOVF   32,F
0932:  BNZ   09B2
0934:  MOVF   31,F
0936:  BNZ   09B2
0938:  MOVF   30,F
093A:  BNZ   09B2
093C:  MOVF   2F,W
093E:  SUBLW  1F
0940:  BNC   09B2
....................         {
....................         CLR_BUTTON();
0942:  RCALL  022A
....................         xuat_32led_don_4byte(y>>24,y>>16,y>>8,y);
0944:  CLRF   42
0946:  CLRF   43
0948:  CLRF   44
094A:  CLRF   48
094C:  CLRF   49
094E:  CLRF   4E
0950:  MOVFF  2E,4F
0954:  MOVFF  2D,50
0958:  MOVFF  2C,51
095C:  MOVFF  2B,52
0960:  RCALL  0208
....................             Y = 0x80000000 >> i;
0962:  MOVLW  80
0964:  MOVWF  2E
0966:  CLRF   2D
0968:  CLRF   2C
096A:  CLRF   2B
096C:  MOVF   2F,W
096E:  MOVWF  40
0970:  BZ    0980
0972:  BCF    FD8.0
0974:  RRCF   2E,F
0976:  RRCF   2D,F
0978:  RRCF   2C,F
097A:  RRCF   2B,F
097C:  DECFSZ 40,F
097E:  BRA    0972
0980:  CLRF   19
0982:  BTFSC  FF2.7
0984:  BSF    19.7
0986:  BCF    FF2.7
....................             delay_ms(50); 
0988:  MOVLW  32
098A:  MOVWF  55
098C:  CALL   00AE
0990:  BTFSC  19.7
0992:  BSF    FF2.7
....................             if(mode!=9) break;
0994:  MOVF   29,W
0996:  SUBLW  09
0998:  BNZ   099E
099A:  MOVF   2A,F
099C:  BTFSS  FD8.2
099E:  BRA    09B2
09A0:  MOVLW  01
09A2:  ADDWF  2F,F
09A4:  BTFSC  FD8.0
09A6:  INCF   30,F
09A8:  BTFSC  FD8.2
09AA:  INCF   31,F
09AC:  BTFSC  FD8.2
09AE:  INCF   32,F
09B0:  BRA    0930
....................         }
....................         DEM++;
09B2:  INCF   3F,F
09B4:  BRA    0896
....................     }
09B6:  GOTO   0BBE (RETURN)
.................... }
.................... VOID KIEU10()
.................... { 
.................... i=0; 
09BA:  CLRF   32
09BC:  CLRF   31
09BE:  CLRF   30
09C0:  CLRF   2F
.................... unsigned int x=200;
09C2:  MOVLW  C8
09C4:  MOVWF  3F
.................... while(i<3){
09C6:  MOVF   32,F
09C8:  BTFSS  FD8.2
09CA:  BRA    0ACE
09CC:  MOVF   31,F
09CE:  BTFSS  FD8.2
09D0:  BRA    0ACE
09D2:  MOVF   30,F
09D4:  BTFSS  FD8.2
09D6:  BRA    0ACE
09D8:  MOVF   2F,W
09DA:  SUBLW  02
09DC:  BTFSS  FD8.0
09DE:  BRA    0ACE
.................... CLR_BUTTON();
09E0:  RCALL  022A
....................  xuat_32led_don_4byte(0,0,0,0xff); delay_ms(x);
09E2:  CLRF   4F
09E4:  CLRF   50
09E6:  CLRF   51
09E8:  SETF   52
09EA:  RCALL  0208
09EC:  CLRF   19
09EE:  BTFSC  FF2.7
09F0:  BSF    19.7
09F2:  BCF    FF2.7
09F4:  MOVFF  3F,55
09F8:  CALL   00AE
09FC:  BTFSC  19.7
09FE:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0,0xff,0); delay_ms(x);
0A00:  CLRF   4F
0A02:  CLRF   50
0A04:  SETF   51
0A06:  CLRF   52
0A08:  CALL   0208
0A0C:  CLRF   19
0A0E:  BTFSC  FF2.7
0A10:  BSF    19.7
0A12:  BCF    FF2.7
0A14:  MOVFF  3F,55
0A18:  CALL   00AE
0A1C:  BTFSC  19.7
0A1E:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0xff,0,0); delay_ms(x);
0A20:  CLRF   4F
0A22:  SETF   50
0A24:  CLRF   51
0A26:  CLRF   52
0A28:  CALL   0208
0A2C:  CLRF   19
0A2E:  BTFSC  FF2.7
0A30:  BSF    19.7
0A32:  BCF    FF2.7
0A34:  MOVFF  3F,55
0A38:  CALL   00AE
0A3C:  BTFSC  19.7
0A3E:  BSF    FF2.7
....................   if(mode!=10) break; 
0A40:  MOVF   29,W
0A42:  SUBLW  0A
0A44:  BNZ   0A4A
0A46:  MOVF   2A,F
0A48:  BTFSS  FD8.2
0A4A:  BRA    0ACE
....................  xuat_32led_don_4byte(0xff,0,0,0); delay_ms(x);
0A4C:  SETF   4F
0A4E:  CLRF   50
0A50:  CLRF   51
0A52:  CLRF   52
0A54:  CALL   0208
0A58:  CLRF   19
0A5A:  BTFSC  FF2.7
0A5C:  BSF    19.7
0A5E:  BCF    FF2.7
0A60:  MOVFF  3F,55
0A64:  CALL   00AE
0A68:  BTFSC  19.7
0A6A:  BSF    FF2.7
....................  CLR_BUTTON();
0A6C:  CALL   022A
....................  xuat_32led_don_4byte(0,0xff,0,0); delay_ms(x);
0A70:  CLRF   4F
0A72:  SETF   50
0A74:  CLRF   51
0A76:  CLRF   52
0A78:  CALL   0208
0A7C:  CLRF   19
0A7E:  BTFSC  FF2.7
0A80:  BSF    19.7
0A82:  BCF    FF2.7
0A84:  MOVFF  3F,55
0A88:  CALL   00AE
0A8C:  BTFSC  19.7
0A8E:  BSF    FF2.7
....................  xuat_32led_don_4byte(0,0,0xff,0); delay_ms(x);
0A90:  CLRF   4F
0A92:  CLRF   50
0A94:  SETF   51
0A96:  CLRF   52
0A98:  CALL   0208
0A9C:  CLRF   19
0A9E:  BTFSC  FF2.7
0AA0:  BSF    19.7
0AA2:  BCF    FF2.7
0AA4:  MOVFF  3F,55
0AA8:  CALL   00AE
0AAC:  BTFSC  19.7
0AAE:  BSF    FF2.7
....................  if(mode!=10) break; 
0AB0:  MOVF   29,W
0AB2:  SUBLW  0A
0AB4:  BNZ   0ABA
0AB6:  MOVF   2A,F
0AB8:  BTFSS  FD8.2
0ABA:  BRA    0ACE
....................    i++;
0ABC:  MOVLW  01
0ABE:  ADDWF  2F,F
0AC0:  BTFSC  FD8.0
0AC2:  INCF   30,F
0AC4:  BTFSC  FD8.2
0AC6:  INCF   31,F
0AC8:  BTFSC  FD8.2
0ACA:  INCF   32,F
0ACC:  BRA    09C6
....................  }
0ACE:  GOTO   0BBE (RETURN)
.................... }
.................... 
.................... 
.................... void main()
0AD2:  CLRF   FF8
0AD4:  BCF    FD0.7
0AD6:  BSF    07.7
0AD8:  BSF    FB8.3
0ADA:  MOVLW  08
0ADC:  MOVWF  FAF
0ADE:  MOVLW  02
0AE0:  MOVWF  FB0
0AE2:  MOVLW  A6
0AE4:  MOVWF  FAC
0AE6:  MOVLW  90
0AE8:  MOVWF  FAB
0AEA:  CLRF   1C
0AEC:  CLRF   1D
0AEE:  CLRF   1E
0AF0:  CLRF   1F
0AF2:  CLRF   28
0AF4:  CLRF   2A
0AF6:  MOVLW  01
0AF8:  MOVWF  29
0AFA:  MOVF   FC1,W
0AFC:  ANDLW  C0
0AFE:  IORLW  0F
0B00:  MOVWF  FC1
0B02:  MOVLW  07
0B04:  MOVWF  FB4
0B06:  SETF   20
0B08:  SETF   21
0B0A:  SETF   22
0B0C:  SETF   23
0B0E:  SETF   24
0B10:  SETF   25
0B12:  SETF   26
0B14:  SETF   27
.................... { 
....................        set_up_port_ic_chot(); 
0B16:  GOTO   01CE
....................        set_tris_b(0x3c);
0B1A:  MOVLW  3C
0B1C:  MOVWF  F93
....................        PORT_B_PULLUPS(TRUE);
0B1E:  BCF    FF1.7
....................        ENABLE_INTERRUPTS(GLOBAL);
0B20:  MOVLW  C0
0B22:  IORWF  FF2,F
....................        ENABLE_INTERRUPTS(INT_RB);
0B24:  BSF    FF2.3
....................    
....................        while(true)
....................        { 
....................                switch (MODE)
0B26:  MOVFF  29,00
0B2A:  MOVF   2A,W
0B2C:  MOVWF  03
0B2E:  BNZ   0B36
0B30:  MOVLW  01
0B32:  SUBWF  00,W
0B34:  BZ    0B92
0B36:  MOVF   03,W
0B38:  BNZ   0B40
0B3A:  MOVLW  02
0B3C:  SUBWF  00,W
0B3E:  BZ    0B98
0B40:  MOVF   03,W
0B42:  BNZ   0B4A
0B44:  MOVLW  03
0B46:  SUBWF  00,W
0B48:  BZ    0B9E
0B4A:  MOVF   03,W
0B4C:  BNZ   0B54
0B4E:  MOVLW  04
0B50:  SUBWF  00,W
0B52:  BZ    0BA4
0B54:  MOVF   03,W
0B56:  BNZ   0B5E
0B58:  MOVLW  05
0B5A:  SUBWF  00,W
0B5C:  BZ    0BA8
0B5E:  MOVF   03,W
0B60:  BNZ   0B68
0B62:  MOVLW  06
0B64:  SUBWF  00,W
0B66:  BZ    0BAC
0B68:  MOVF   03,W
0B6A:  BNZ   0B72
0B6C:  MOVLW  07
0B6E:  SUBWF  00,W
0B70:  BZ    0BB0
0B72:  MOVF   03,W
0B74:  BNZ   0B7C
0B76:  MOVLW  08
0B78:  SUBWF  00,W
0B7A:  BZ    0BB4
0B7C:  MOVF   03,W
0B7E:  BNZ   0B86
0B80:  MOVLW  09
0B82:  SUBWF  00,W
0B84:  BZ    0BB8
0B86:  MOVF   03,W
0B88:  BNZ   0B90
0B8A:  MOVLW  0A
0B8C:  SUBWF  00,W
0B8E:  BZ    0BBC
0B90:  BRA    0BBE
....................                {
....................                   case 1:
....................                            KIEU1();
0B92:  GOTO   0238
....................                            break;
0B96:  BRA    0BBE
....................                   case 2:
....................                            KIEU2();
0B98:  GOTO   02AC
....................                            break;
0B9C:  BRA    0BBE
....................                   case 3:
....................                            KIEU3();
0B9E:  GOTO   0338
....................                            break;  
0BA2:  BRA    0BBE
....................                
....................                   case 4:
....................                            KIEU4();
0BA4:  BRA    03C4
....................                            break;  
0BA6:  BRA    0BBE
....................                   case 5:
....................                            KIEU5();
0BA8:  BRA    0436
....................                            break;  
0BAA:  BRA    0BBE
....................                   case 6:
....................                            KIEU6();
0BAC:  BRA    051C
....................                            break;  
0BAE:  BRA    0BBE
....................                   case 7:
....................                            KIEU7();
0BB0:  BRA    067E
....................                            break;  
0BB2:  BRA    0BBE
....................                   case 8:
....................                            KIEU8();
0BB4:  BRA    078A
....................                            break;  
0BB6:  BRA    0BBE
....................                   case 9:
....................                            KIEU9();
0BB8:  BRA    088C
....................                            break;  
0BBA:  BRA    0BBE
....................                   case 10:
....................                            KIEU10();
0BBC:  BRA    09BA
....................                            break;  
....................                
....................                
....................                
....................                
....................                
....................                
....................                
....................                   default:
....................                     // default statements
....................                }
0BBE:  BRA    0B26
.................... 
....................        }
.................... }
.................... 
.................... #INT_RB
.................... VOID NGAT_NGOAI_RB()
0BC0:  SLEEP 
.................... {
....................       if (input(UP)==0)
*
00D4:  BSF    F93.5
00D6:  BTFSC  F81.5
00D8:  BRA    0102
....................       { 
....................          delay_ms(20);
00DA:  MOVLW  14
00DC:  MOVWF  55
00DE:  RCALL  00AE
....................          {
....................             if (input(UP)==0)
00E0:  BSF    F93.5
00E2:  BTFSC  F81.5
00E4:  BRA    0102
....................             {
....................             MODE++;
00E6:  INCF   29,F
00E8:  BTFSC  FD8.2
00EA:  INCF   2A,F
....................             IF (MODE==11) MODE=1;
00EC:  MOVF   29,W
00EE:  SUBLW  0B
00F0:  BNZ   00FC
00F2:  MOVF   2A,F
00F4:  BNZ   00FC
00F6:  CLRF   2A
00F8:  MOVLW  01
00FA:  MOVWF  29
....................             while(!input(UP));
00FC:  BSF    F93.5
00FE:  BTFSS  F81.5
0100:  BRA    00FC
....................             }
....................          }
....................       }
.................... //!      down
....................             if (input(DW)==0)
0102:  BSF    F93.4
0104:  BTFSC  F81.4
0106:  BRA    0130
....................       { 
....................          delay_ms(20);
0108:  MOVLW  14
010A:  MOVWF  55
010C:  RCALL  00AE
....................          {
....................             if (input(DW)==0)
010E:  BSF    F93.4
0110:  BTFSC  F81.4
0112:  BRA    0130
....................             {
....................             MODE--;
0114:  MOVF   29,W
0116:  BTFSC  FD8.2
0118:  DECF   2A,F
011A:  DECF   29,F
....................             IF (MODE==0) MODE=10;
011C:  MOVF   29,F
011E:  BNZ   012A
0120:  MOVF   2A,F
0122:  BNZ   012A
0124:  CLRF   2A
0126:  MOVLW  0A
0128:  MOVWF  29
....................             while(!input(UP));
012A:  BSF    F93.5
012C:  BTFSS  F81.5
012E:  BRA    012A
....................             }
....................          }
....................       }
....................       
0130:  MOVF   F81,W
0132:  NOP   
0134:  BCF    FF2.0
0136:  GOTO   0060
.................... }

Configuration Fuses:
   Word  1: CC27   PLL12 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
